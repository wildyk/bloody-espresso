{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/src/app/lib/actions.ts"],"sourcesContent":["'use server';\nimport { revalidatePath } from 'next/cache';\nimport { redirect } from 'next/navigation';\nimport postgres from 'postgres';\nimport { z } from 'zod';\n\nconst sql = postgres(process.env.POSTGRES_URL!, { ssl: 'require' });\n\nconst MenuSchema = z.object({\n  id: z.string(),\n  nama_produk: z.string(),\n  harga_produk: z.number(),\n});\n\nconst TransaksiSchema = z.object({\n  id: z.string(),\n  id_produk: z.string(),\n  nama_pembeli: z.string(),\n  total_harga: z.number(),\n  tanggal_transaksi: z.string(),\n  quantity: z.number().optional(),\n});\n\nconst CreateMenu = MenuSchema.omit({ id: true });\nconst UpdateMenu = MenuSchema.omit({ id: true });\n\n// MENU FUNCTIONS\nexport async function createMenu(formData: FormData) {\n  const { nama_produk, harga_produk } = CreateMenu.parse({\n    nama_produk: formData.get('nama_produk'),\n    harga_produk: Number(formData.get('harga_produk')),\n  });\n\n  await sql`\n    INSERT INTO produk (nama_produk, harga_produk)\n    VALUES (${nama_produk}, ${harga_produk})\n  `;\n\n  revalidatePath('/admin/dashboard/menu');\n  redirect('/admin/dashboard/menu');\n}\n\nexport async function updateMenu(id: string, formData: FormData) {\n  const { nama_produk, harga_produk } = UpdateMenu.parse({\n    nama_produk: formData.get('nama_produk'),\n    harga_produk: Number(formData.get('harga_produk')),\n  });\n\n  await sql`\n    UPDATE produk\n    SET nama_produk = ${nama_produk}, harga_produk = ${harga_produk}\n    WHERE id_produk = ${id}\n  `;\n\n  revalidatePath('/admin/dashboard/menu');\n  redirect('/admin/dashboard/menu');\n}\n\nexport async function deleteMenu(id: string) {\n  await sql`DELETE FROM produk WHERE id_produk = ${id}`;\n  revalidatePath('/admin/dashboard/menu');\n}\n\nexport async function getProductById(id: number) {\n  try {\n    const result = await sql`\n      SELECT id_produk, nama_produk, harga_produk \n      FROM produk \n      WHERE id_produk = ${id}\n    `;\n\n    if (result.length === 0) {\n      return null;\n    }\n\n    return {\n      id_produk: result[0].id_produk,\n      nama_produk: result[0].nama_produk,\n      harga_produk: Number(result[0].harga_produk)\n    };\n  } catch (error) {\n    console.error('Database Error:', error);\n    throw new Error('Failed to fetch product data.');\n  }\n}\n\n// NEW FUNCTION: Get all products for dropdown\nexport async function getAllProducts() {\n  try {\n    const result = await sql`\n      SELECT id_produk, nama_produk, harga_produk \n      FROM produk \n      ORDER BY nama_produk ASC\n    `;\n\n    return result.map(row => ({\n      id_produk: row.id_produk,\n      nama_produk: row.nama_produk,\n      harga_produk: Number(row.harga_produk)\n    }));\n  } catch (error) {\n    console.error('Database Error:', error);\n    throw new Error('Failed to fetch products.');\n  }\n}\n\nexport async function createTransaksi(formData: FormData) {\n  const id_produk = formData.get('id_produk');\n  const nama_pembeli = formData.get('nama_pembeli');\n  const total_harga = Number(formData.get('total_harga'));\n  const quantity = Number(formData.get('quantity')) || 1;\n  const tanggal_transaksi = formData.get('tanggal_transaksi') || new Date().toISOString().split('T')[0];\n\n  const CreateTransaksiWithQuantity = z.object({\n    id_produk: z.string(),\n    nama_pembeli: z.string(),\n    total_harga: z.number(),\n    quantity: z.number().min(1),\n    tanggal_transaksi: z.string(),\n  });\n\n  const validatedData = CreateTransaksiWithQuantity.parse({\n    id_produk,\n    nama_pembeli,\n    total_harga,\n    quantity,\n    tanggal_transaksi,\n  });\n\n  try {\n    await sql`\n      INSERT INTO transaksi (id_produk, nama_pembeli, total_harga, tanggal_transaksi, quantity)\n      VALUES (${validatedData.id_produk}, ${validatedData.nama_pembeli}, ${validatedData.total_harga}, ${validatedData.tanggal_transaksi}, ${validatedData.quantity})\n    `;\n  } catch (error) {\n    console.error('Database Error:', error);\n    throw new Error('Failed to create transaksi.');\n  }\n\n  revalidatePath('/admin/dashboard/transaksi');\n  redirect('/admin/dashboard/transaksi');\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 227, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/.next-internal/server/app/admin/dashboard/menu/%5Bid%5D/edit/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {updateMenu as '602cf8d20e8baa474a749b763ff3d7e57d5c43fb59'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 285, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/src/app/ui/menu/editform.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/ui/menu/editform.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/ui/menu/editform.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgS,GAC7T,8DACA","debugId":null}},
    {"offset": {"line": 299, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/src/app/ui/menu/editform.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/ui/menu/editform.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/ui/menu/editform.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA4Q,GACzS,0CACA","debugId":null}},
    {"offset": {"line": 313, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 323, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/src/app/ui/menu/breadcrumbs.tsx"],"sourcesContent":["import { clsx } from 'clsx';\nimport Link from 'next/link';\nimport { ChevronRightIcon, HomeIcon } from '@heroicons/react/24/outline';\nimport { alegreya } from '@/app/ui/fonts';\n\ninterface Breadcrumb {\n  label: string;\n  href: string;\n  active?: boolean;\n}\n\nexport default function Breadcrumbs({\n  breadcrumbs,\n}: {\n  breadcrumbs: Breadcrumb[];\n}) {\n  return (\n    <nav aria-label=\"Breadcrumb\" className=\"mb-6 block\">\n      <ol className={clsx(alegreya.className, 'flex text-xl md:text-2xl')}>\n        {/* Home Icon + Dashboard */}\n        <li className=\"flex items-center\">\n          <Link\n            href=\"/admin/dashboard/analitik\"\n            className=\"flex items-center text-gray-500 hover:text-gray-700 transition-colors\"\n          >\n            <HomeIcon className=\"h-5 w-5 mr-2\" />\n            <span className=\"hidden md:block\">Dashboard</span>\n          </Link>\n          <ChevronRightIcon className=\"mx-3 h-4 w-4 text-gray-400\" />\n        </li>\n\n        {/* Breadcrumbs Dynamic */}\n        {breadcrumbs.map((breadcrumb, index) => (\n          <li\n            key={breadcrumb.href}\n            aria-current={breadcrumb.active ? 'page' : undefined}\n            className={clsx(\n              'flex items-center',\n              breadcrumb.active ? 'text-gray-900 font-semibold' : 'text-gray-500'\n            )}\n          >\n            {breadcrumb.active ? (\n              <span>{breadcrumb.label}</span>\n            ) : (\n              <Link\n                href={breadcrumb.href}\n                className=\"hover:text-gray-700 transition-colors\"\n              >\n                {breadcrumb.label}\n              </Link>\n            )}\n            {index < breadcrumbs.length - 1 && (\n              <ChevronRightIcon className=\"mx-3 h-4 w-4 text-gray-400\" />\n            )}\n          </li>\n        ))}\n      </ol>\n    </nav>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AAAA;AACA;AAAA;;;;;;AAQe,SAAS,YAAY,EAClC,WAAW,EAGZ;IACC,qBACE,8OAAC;QAAI,cAAW;QAAa,WAAU;kBACrC,cAAA,8OAAC;YAAG,WAAW,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE,mLAAA,CAAA,WAAQ,CAAC,SAAS,EAAE;;8BAEtC,8OAAC;oBAAG,WAAU;;sCACZ,8OAAC,4JAAA,CAAA,UAAI;4BACH,MAAK;4BACL,WAAU;;8CAEV,8OAAC,+MAAA,CAAA,WAAQ;oCAAC,WAAU;;;;;;8CACpB,8OAAC;oCAAK,WAAU;8CAAkB;;;;;;;;;;;;sCAEpC,8OAAC,+NAAA,CAAA,mBAAgB;4BAAC,WAAU;;;;;;;;;;;;gBAI7B,YAAY,GAAG,CAAC,CAAC,YAAY,sBAC5B,8OAAC;wBAEC,gBAAc,WAAW,MAAM,GAAG,SAAS;wBAC3C,WAAW,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EACZ,qBACA,WAAW,MAAM,GAAG,gCAAgC;;4BAGrD,WAAW,MAAM,iBAChB,8OAAC;0CAAM,WAAW,KAAK;;;;;qDAEvB,8OAAC,4JAAA,CAAA,UAAI;gCACH,MAAM,WAAW,IAAI;gCACrB,WAAU;0CAET,WAAW,KAAK;;;;;;4BAGpB,QAAQ,YAAY,MAAM,GAAG,mBAC5B,8OAAC,+NAAA,CAAA,mBAAgB;gCAAC,WAAU;;;;;;;uBAlBzB,WAAW,IAAI;;;;;;;;;;;;;;;;AAyBhC","debugId":null}},
    {"offset": {"line": 436, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/src/app/lib/data.ts"],"sourcesContent":["import postgres from 'postgres';\nimport {\n  CustomerField,\n  CustomersTableType,\n  InvoiceForm,\n  InvoicesTable,\n  LatestInvoiceRaw,\n  Revenue,\n} from './definitions';\nimport { formatCurrency } from './utils';\n\nconst sql = postgres(process.env.POSTGRES_URL!, { ssl: 'require' });\n\nexport async function fetchProduk(id: string) {\n  try {\n    const result = await sql<{\n      id_produk: number;\n      nama_produk: string;\n      harga_produk: number;\n    }[]>`\n      SELECT id_produk, nama_produk, harga_produk \n      FROM produk \n      WHERE id_produk = ${id}\n      LIMIT 1\n    `;\n\n    return result[0]; \n  } catch (error) {\n    console.error('Database Error:', error);\n    throw new Error('Failed to fetch produk by ID.');\n  }\n  \n}\nexport async function fetchAllProduk() {\n  try {\n    const result = await sql`\n      SELECT id_produk, nama_produk, harga_produk \n      FROM produk \n      ORDER BY id_produk ASC\n    `;\n    return result;\n  } catch (error) {\n    console.error('Database Error:', error);\n    throw new Error('Failed to fetch all produk.');\n  }\n}\n\nexport async function fetchTransaksi() {\n  await new Promise((r) => setTimeout(r, 1500));\n  try {\nconst transaksi = await sql<{\n  id_transaksi: number;\n  id_produk: number;\n  nama_pembeli: string;\n  tanggal_transaksi: string;\n  total_harga: number;\n  quantity: number;\n}[]>`\n  SELECT id_transaksi, id_produk, nama_pembeli, tanggal_transaksi, total_harga, quantity\n  FROM transaksi\n  ORDER BY tanggal_transaksi ASC\n`;\n    return transaksi;\n  } catch (error) {\n    console.error('Database Error:', error);\n    throw new Error('Failed to fetch transaksi.');\n  }\n}\n\nexport async function fetchAnalytics() {\n  await new Promise((resolve) => setTimeout(resolve, 1500)); \n  try {\n    // Query 1: total produk\n    const totalProdukRes = await sql`SELECT COUNT(*) FROM produk`;\n    const totalProduk = Number(totalProdukRes[0].count);\n\n    // Query 2: total revenue (jumlah total_harga dari transaksi)\n    const totalRevenueRes = await sql`SELECT SUM(total_harga) FROM transaksi`;\n    const totalRevenue = Number(totalRevenueRes[0].sum || 0);\n\n    // Query 3: produk paling sering muncul di transaksi\n    const mostSoldRes = await sql`\n      SELECT p.nama_produk, COUNT(t.id_produk) AS jumlah_terjual\n      FROM transaksi t\n      JOIN produk p ON t.id_produk = p.id_produk\n      GROUP BY p.nama_produk\n      ORDER BY jumlah_terjual DESC\n      LIMIT 1;\n    `;\n    const mostSold = mostSoldRes[0];\n\n    return {\n      totalProduk,\n      totalRevenue,\n      mostSold: mostSold?.nama_produk || '-',\n      jumlahTerjual: mostSold?.jumlah_terjual || 0,\n    };\n  } catch (err) {\n    console.error('DB Error (analytics):', err);\n    throw new Error('Failed to fetch analytics data.');\n  }\n}\n\nexport async function fetchPenjualanProduk() {\n  await new Promise((resolve) => setTimeout(resolve, 2000)); \n  try {\n    const data = await sql<{ nama_produk: string; jumlah_terjual: number }[]>`\n      SELECT p.nama_produk, COUNT(t.id_produk) AS jumlah_terjual\n      FROM transaksi t\n      JOIN produk p ON t.id_produk = p.id_produk\n      GROUP BY p.nama_produk\n      ORDER BY jumlah_terjual DESC\n    `;\n    return data;\n  } catch (err) {\n    console.error('DB Error (grafik):', err);\n    throw new Error('Gagal ambil data grafik penjualan.');\n  }\n}\n\nexport async function fetchProdukWithFoto() {\n  const produk = await sql<{\n    id_produk: number;\n    nama_produk: string;\n    harga_produk: number;\n    foto: string;\n  }[]>`SELECT * FROM menu ORDER BY id_produk ASC`;\n  return produk;\n}\n\n\n// Fungsi untuk menambah item ke keranjang (cart)\nexport async function addToCart(cartData: {\n  id_produk: number;\n  nama_produk: string;\n  quantity: number;\n  harga_produk: number;\n  total_harga: number;\n}) {\n  try {\n    const result = await sql`\n      INSERT INTO cart (id_produk, nama_produk, quantity, harga_produk, total_harga, created_at)\n      VALUES (${cartData.id_produk}, ${cartData.nama_produk}, ${cartData.quantity}, ${cartData.harga_produk}, ${cartData.total_harga}, NOW())\n      RETURNING *\n    `;\n    return result[0];\n  } catch (error) {\n    console.error('Database Error:', error);\n    throw new Error('Failed to add to cart');\n  }\n}\n\n// Fungsi untuk membuat transaksi langsung\nexport async function createTransaksi(transaksiData: {\n  id_produk: number;\n  nama_pembeli: string;\n  quantity: number;\n  total_harga: number;\n}) {\n  try {\n    const result = await sql`\n      INSERT INTO transaksi (id_produk, nama_pembeli, tanggal_transaksi, total_harga, quantity)\n      VALUES (${transaksiData.id_produk}, ${transaksiData.nama_pembeli}, NOW(), ${transaksiData.total_harga}, ${transaksiData.quantity})\n      RETURNING *\n    `;\n    return result[0];\n  } catch (error) {\n    console.error('Database Error:', error);\n    throw new Error('Failed to create transaction');\n  }\n}\n\n// Fungsi untuk mengambil cart items\nexport async function fetchCartItems() {\n  try {\n    const result = await sql`\n      SELECT c.*, m.nama_produk, m.foto \n      FROM cart c\n      JOIN menu m ON c.id_produk = m.id_produk\n      ORDER BY c.created_at DESC\n    `;\n    return result;\n  } catch (error) {\n    console.error('Database Error:', error);\n    throw new Error('Failed to fetch cart items');\n  }\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 589, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/src/app/admin/dashboard/menu/%5Bid%5D/edit/page.tsx"],"sourcesContent":["import Form from '@/app/ui/menu/editform';\nimport Breadcrumbs from '@/app/ui/menu/breadcrumbs';\nimport { fetchProduk } from '@/app/lib/data';\nimport { notFound } from 'next/navigation';\n \nexport default async function Page({ params }: { params: { id: string } }) {\n  const id = params.id;\n  const produk = await fetchProduk(id);\n\n  if (!produk) {\n    notFound();\n  }\n\n  return (\n    <main>\n      <Breadcrumbs\n        breadcrumbs={[\n          { label: 'Menu', href: '/admin/dashboard/menu' },\n          {\n            label: 'Edit Menu',\n            href: `/admin/dashboard/menu/${id}/edit`,\n            active: true,\n          },\n        ]}\n      />\n      <Form produk={produk} />\n    </main>\n  );\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AAAA;;;;;;AAEe,eAAe,KAAK,EAAE,MAAM,EAA8B;IACvE,MAAM,KAAK,OAAO,EAAE;IACpB,MAAM,SAAS,MAAM,CAAA,GAAA,yHAAA,CAAA,cAAW,AAAD,EAAE;IAEjC,IAAI,CAAC,QAAQ;QACX,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD;IACT;IAEA,qBACE,8OAAC;;0BACC,8OAAC,wIAAA,CAAA,UAAW;gBACV,aAAa;oBACX;wBAAE,OAAO;wBAAQ,MAAM;oBAAwB;oBAC/C;wBACE,OAAO;wBACP,MAAM,CAAC,sBAAsB,EAAE,GAAG,KAAK,CAAC;wBACxC,QAAQ;oBACV;iBACD;;;;;;0BAEH,8OAAC,qIAAA,CAAA,UAAI;gBAAC,QAAQ;;;;;;;;;;;;AAGpB","debugId":null}}]
}