{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/src/app/lib/data.ts"],"sourcesContent":["import postgres from 'postgres';\nimport { Produk } from './definitions';\n\nconst sql = postgres(process.env.POSTGRES_URL!, { ssl: 'require' });\n\n// Perbaikan 1: Tambahkan explicit return type dengan Produk | null\nexport async function fetchProduk(id: string): Promise<Produk | null> {\n  try {\n    const numericId = Number(id);\n    if (isNaN(numericId)) {\n      throw new Error('Invalid ID format.');\n    }\n    const result = await sql<Produk[]>`\n      SELECT id_produk, nama_produk, harga_produk \n      FROM produk \n      WHERE id_produk = ${numericId}\n      LIMIT 1\n    `;\n    return result[0] || null;\n  } catch (error) {\n    console.error('Database Error:', error);\n    throw new Error('Failed to fetch produk by ID.');\n  }\n}\n\n// Perbaikan 2: Tambahkan explicit return type\nexport async function fetchAllProduk(): Promise<Produk[]> {\n  try {\n    const result = await sql<Produk[]>`\n      SELECT id_produk, nama_produk, harga_produk \n      FROM produk \n      ORDER BY id_produk ASC\n    `;\n    return result;\n  } catch (error) {\n    console.error('Database Error:', error);\n    throw new Error('Failed to fetch all produk.');\n  }\n}\n\n// Definisikan type untuk Transaksi\nexport type Transaksi = {\n  id_transaksi: number;\n  id_produk: number;\n  nama_pembeli: string;\n  tanggal_transaksi: string;\n  total_harga: number;\n  quantity: number;\n};\n\nexport async function fetchTransaksi(): Promise<Transaksi[]> {\n  try {\n    const transaksi = await sql<Transaksi[]>`\n      SELECT id_transaksi, id_produk, nama_pembeli, tanggal_transaksi, total_harga, quantity\n      FROM transaksi\n      ORDER BY tanggal_transaksi ASC\n    `;\n    return transaksi;\n  } catch (error) {\n    console.error('Database Error:', error);\n    throw new Error('Failed to fetch transaksi.');\n  }\n}\n\n// Definisikan type untuk Analytics\nexport type Analytics = {\n  totalProduk: number;\n  totalRevenue: number;\n  mostSold: string;\n  jumlahTerjual: number;\n};\n\nexport async function fetchAnalytics(): Promise<Analytics> {\n  try {\n    // Query 1: total produk\n    const totalProdukRes = await sql<{ count: number }[]>`SELECT COUNT(*) AS count FROM produk`;\n    const totalProduk = Number(totalProdukRes[0].count);\n\n    // Query 2: total revenue\n    const totalRevenueRes = await sql<{ sum: number | null }[]>`SELECT SUM(total_harga) AS sum FROM transaksi`;\n    const totalRevenue = Number(totalRevenueRes[0].sum || 0);\n\n    // Query 3: produk paling sering muncul\n    const mostSoldRes = await sql<{\n      nama_produk: string;\n      jumlah_terjual: number;\n    }[]>`\n      SELECT p.nama_produk, COUNT(t.id_produk) AS jumlah_terjual\n      FROM transaksi t\n      JOIN produk p ON t.id_produk = p.id_produk\n      GROUP BY p.nama_produk\n      ORDER BY jumlah_terjual DESC\n      LIMIT 1;\n    `;\n    const mostSold = mostSoldRes[0];\n\n    return {\n      totalProduk,\n      totalRevenue,\n      mostSold: mostSold?.nama_produk || '-',\n      jumlahTerjual: mostSold?.jumlah_terjual || 0,\n    };\n  } catch (err) {\n    console.error('DB Error (analytics):', err);\n    throw new Error('Failed to fetch analytics data.');\n  }\n}\n\n// Definisikan type untuk PenjualanProduk\nexport type PenjualanProduk = {\n  nama_produk: string;\n  jumlah_terjual: number;\n};\n\nexport async function fetchPenjualanProduk(): Promise<PenjualanProduk[]> {\n  try {\n    const data = await sql<PenjualanProduk[]>`\n      SELECT p.nama_produk, COUNT(t.id_produk) AS jumlah_terjual\n      FROM transaksi t\n      JOIN produk p ON t.id_produk = p.id_produk\n      GROUP BY p.nama_produk\n      ORDER BY jumlah_terjual DESC\n    `;\n    return data;\n  } catch (err) {\n    console.error('DB Error (grafik):', err);\n    throw new Error('Gagal ambil data grafik penjualan.');\n  }\n}\n\n// Definisikan type untuk ProdukWithFoto\nexport type ProdukWithFoto = {\n  id_produk: number;\n  nama_produk: string;\n  harga_produk: number;\n  foto: string;\n};\n\nexport async function fetchProdukWithFoto(): Promise<ProdukWithFoto[]> {\n  try {\n    const produk = await sql<ProdukWithFoto[]>`SELECT * FROM produk ORDER BY id_produk ASC`;\n    return produk;\n  } catch (error) {\n    console.error('Database Error:', error);\n    throw new Error('Failed to fetch produk with foto.');\n  }\n}\n\n// Definisikan type untuk CartData\nexport type CartData = {\n  id_produk: number;\n  nama_produk: string;\n  quantity: number;\n  harga_produk: number;\n  total_harga: number;\n};\n\nexport async function addToCart(cartData: CartData): Promise<any> {\n  try {\n    const result = await sql`\n      INSERT INTO cart (id_produk, nama_produk, quantity, harga_produk, total_harga, created_at)\n      VALUES (${cartData.id_produk}, ${cartData.nama_produk}, ${cartData.quantity}, ${cartData.harga_produk}, ${cartData.total_harga}, NOW())\n      RETURNING *\n    `;\n    return result[0] || null;\n  } catch (error) {\n    console.error('Database Error:', error);\n    throw new Error('Failed to add to cart');\n  }\n}\n\n// Definisikan type untuk TransaksiData\nexport type TransaksiData = {\n  id_produk: number;\n  nama_pembeli: string;\n  quantity: number;\n  total_harga: number;\n};\n\nexport async function createTransaksi(transaksiData: TransaksiData): Promise<any> {\n  try {\n    const result = await sql`\n      INSERT INTO transaksi (id_produk, nama_pembeli, tanggal_transaksi, total_harga, quantity)\n      VALUES (${transaksiData.id_produk}, ${transaksiData.nama_pembeli}, NOW(), ${transaksiData.total_harga}, ${transaksiData.quantity})\n      RETURNING *\n    `;\n    return result[0] || null;\n  } catch (error) {\n    console.error('Database Error:', error);\n    throw new Error('Failed to create transaction');\n  }\n}\n\n// Definisikan type untuk CartItem\nexport type CartItem = {\n  id_produk: number;\n  nama_produk: string;\n  quantity: number;\n  harga_produk: number;\n  total_harga: number;\n  created_at: string;\n  foto: string;\n};\n\n// Perbaikan 3: Fix query - gunakan konsisten antara 'menu' atau 'produk'\nexport async function fetchCartItems(): Promise<CartItem[]> {\n  try {\n    const result = await sql<CartItem[]>`\n      SELECT c.*, p.nama_produk, p.foto \n      FROM cart c\n      JOIN produk p ON c.id_produk = p.id_produk\n      ORDER BY c.created_at DESC\n    `;\n    return result;\n  } catch (error) {\n    console.error('Database Error:', error);\n    throw new Error('Failed to fetch cart items');\n  }\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/src/app/ui/menu/table.tsx"],"sourcesContent":["'use client';\n\nimport Link from 'next/link';\nimport { fetchAllProduk } from '@/app/lib/data';\nimport { alegreya } from '@/app/ui/fonts';\nimport { UpdateProduk, DeleteProduk } from '@/app/ui/menu/buttons';\n\nexport default async function ProdukTable({\n  searchParams,\n}: {\n  searchParams: { query?: string; page?: string };\n}) {\n  const query = searchParams.query?.toLowerCase() || '';\n  const currentPage = parseInt(searchParams.page || '1', 10);\n  const itemsPerPage = 5;\n\n  let produkList = [];\n  try {\n    produkList = await fetchAllProduk();\n  } catch (e) {\n    console.error('Gagal memuat data produk:', e);\n    return (\n      <div className=\"text-center py-12\">\n        <h3 className=\"text-lg font-semibold text-red-600\">Gagal memuat data produk</h3>\n        <p className=\"text-gray-500 mt-2\">Silakan coba beberapa saat lagi.</p>\n      </div>\n    );\n  }\n\n  const filtered = produkList.filter((produk) =>\n    produk.nama_produk.toLowerCase().includes(query)\n  );\n\n  const totalItems = filtered.length;\n  const totalPages = Math.ceil(totalItems / itemsPerPage);\n  const paginated = filtered.slice(\n    (currentPage - 1) * itemsPerPage,\n    currentPage * itemsPerPage\n  );\n\n  return (\n    <>\n      {/* ... (bagian tabel tidak berubah) */}\n\n      {/* Enhanced Pagination */}\n      {totalPages > 1 && (\n        <div className=\"mt-8 flex flex-col sm:flex-row items-center justify-between gap-4 p-4 bg-white border border-gray-200 rounded-lg\">\n          <div className=\"text-lg text-gray-700\">\n            Menampilkan <span className=\"font-medium\">{(currentPage - 1) * itemsPerPage + 1}</span> sampai{' '}\n            <span className=\"font-medium\">{Math.min(currentPage * itemsPerPage, totalItems)}</span> dari{' '}\n            <span className=\"font-medium\">{totalItems}</span> produk\n          </div>\n\n          <div className=\"flex items-center gap-2\">\n            {/* Previous */}\n            {currentPage > 1 && (\n              <Link\n                href={`?${new URLSearchParams({\n                  ...Object.fromEntries(Object.entries(searchParams).filter(([key]) => key !== 'page')),\n                  page: String(currentPage - 1),\n                }).toString()}`}\n                className=\"relative inline-flex items-center rounded-md border border-gray-300 bg-white px-3 py-2 text-sm font-medium text-gray-500 hover:bg-gray-50\"\n                aria-label=\"Halaman sebelumnya\"\n              >\n                <svg className=\"h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                </svg>\n                <span className=\"ml-1 hidden sm:block\">Sebelumnya</span>\n              </Link>\n            )}\n\n            {/* Page Numbers */}\n            <div className=\"flex items-center gap-1\">\n              {Array.from({ length: totalPages }, (_, i) => {\n                const page = i + 1;\n                const params = new URLSearchParams();\n\n                Object.entries(searchParams).forEach(([key, value]) => {\n                  if (value && key !== 'page') params.set(key, value);\n                });\n                params.set('page', String(page));\n\n                return (\n                  <Link\n                    key={page}\n                    href={`?${params.toString()}`}\n                    className={`relative inline-flex items-center px-4 py-2 text-lg font-medium border transition-colors duration-200 ${\n                      page === currentPage\n                        ? 'z-10 bg-red-900 text-white rounded-md'\n                        : 'text-gray-900 border-gray-300 hover:bg-gray-50 rounded-md'\n                    }`}\n                    aria-current={page === currentPage ? 'page' : undefined}\n                    aria-label={`Halaman ${page}`}\n                  >\n                    {page}\n                  </Link>\n                );\n              })}\n            </div>\n\n            {/* Next */}\n            {currentPage < totalPages && (\n              <Link\n                href={`?${new URLSearchParams({\n                  ...Object.fromEntries(Object.entries(searchParams).filter(([key]) => key !== 'page')),\n                  page: String(currentPage + 1),\n                }).toString()}`}\n                className=\"relative inline-flex items-center rounded-md border border-gray-300 bg-white px-3 py-2 text-lg font-medium text-gray-500 hover:bg-gray-50\"\n                aria-label=\"Halaman selanjutnya\"\n              >\n                <span className=\"mr-1 hidden sm:block\">Selanjutnya</span>\n                <svg className=\"h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                </svg>\n              </Link>\n            )}\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 449, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/src/app/ui/search.tsx"],"sourcesContent":["\"use client\";\n\nimport { usePathname, useRouter, useSearchParams } from \"next/navigation\";\nimport { MagnifyingGlassIcon } from \"@heroicons/react/24/outline\";\nimport { useDebouncedCallback } from \"use-debounce\";\n\nexport default function Search({ placeholder }: { placeholder: string }) {\n  const searchParams = useSearchParams();\n  const replace = useRouter();\n  const pathname = usePathname();\n\n  const defaultQuery = searchParams.get(\"query\") || \"\";\n\n  const handleSearch = useDebouncedCallback((term: string) => {\n    const params = new URLSearchParams(searchParams);\n\n    params.set(\"page\", \"1\"); \n\n    if (term) {\n      params.set(\"query\", term);\n    } else {\n      params.delete(\"query\");\n    }\n\n    replace.replace(`${pathname}?${params.toString()}`);\n  }, 300); \n\n  return (\n    <div className=\"relative flex flex-1 flex-shrink-0\">\n      <label htmlFor=\"search\" className=\"sr-only\">\n        Search\n      </label>\n      <input\n        id=\"search\"\n        defaultValue={defaultQuery}\n        className=\"peer block w-full rounded-md border border-gray-200 py-[9px] pl-10 text-sm outline-2 placeholder:text-gray-500\"\n        placeholder={placeholder}\n        onChange={(e) => handleSearch(e.target.value)}\n      />\n      <MagnifyingGlassIcon className=\"absolute left-3 top-1/2 h-[18px] w-[18px] -translate-y-1/2 text-gray-500 peer-focus:text-gray-900\" />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMe,SAAS,OAAO,EAAE,WAAW,EAA2B;IACrE,MAAM,eAAe,CAAA,GAAA,kIAAA,CAAA,kBAAe,AAAD;IACnC,MAAM,UAAU,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACxB,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAE3B,MAAM,eAAe,aAAa,GAAG,CAAC,YAAY;IAElD,MAAM,eAAe,CAAA,GAAA,0JAAA,CAAA,uBAAoB,AAAD,EAAE,CAAC;QACzC,MAAM,SAAS,IAAI,gBAAgB;QAEnC,OAAO,GAAG,CAAC,QAAQ;QAEnB,IAAI,MAAM;YACR,OAAO,GAAG,CAAC,SAAS;QACtB,OAAO;YACL,OAAO,MAAM,CAAC;QAChB;QAEA,QAAQ,OAAO,CAAC,GAAG,SAAS,CAAC,EAAE,OAAO,QAAQ,IAAI;IACpD,GAAG;IAEH,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAM,SAAQ;gBAAS,WAAU;0BAAU;;;;;;0BAG5C,8OAAC;gBACC,IAAG;gBACH,cAAc;gBACd,WAAU;gBACV,aAAa;gBACb,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;;;;;;0BAE9C,8OAAC,qOAAA,CAAA,sBAAmB;gBAAC,WAAU;;;;;;;;;;;;AAGrC","debugId":null}},
    {"offset": {"line": 519, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/src/app/lib/actions.ts"],"sourcesContent":["'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { redirect } from 'next/navigation';\nimport postgres from 'postgres';\nimport { z } from 'zod';\n\nconst sql = postgres(process.env.POSTGRES_URL!, { ssl: 'require' });\n\nconst MenuSchema = z.object({\n  id: z.string(),\n  nama_produk: z.string(),\n  harga_produk: z.number(),\n});\n\nconst TransaksiSchema = z.object({\n  id: z.string(),\n  id_produk: z.string(),\n  nama_pembeli: z.string(),\n  total_harga: z.number(),\n  tanggal_transaksi: z.string(),\n  quantity: z.number().optional(),\n});\n\nconst CreateMenu = MenuSchema.omit({ id: true });\nconst UpdateMenu = MenuSchema.omit({ id: true });\n\n// MENU FUNCTIONS\nexport async function createMenu(formData: FormData) {\n  try {\n    const { nama_produk, harga_produk } = CreateMenu.parse({\n      nama_produk: formData.get('nama_produk'),\n      harga_produk: Number(formData.get('harga_produk')),\n    });\n\n    await sql`\n      INSERT INTO produk (nama_produk, harga_produk)\n      VALUES (${nama_produk}, ${harga_produk})\n    `;\n\n    revalidatePath('/admin/dashboard/menu');\n    redirect('/admin/dashboard/menu');\n  } catch (error) {\n    console.error(\"Gagal membuat menu:\", error);\n    throw error;\n  }\n}\n\nexport async function updateMenu(id: string, formData: FormData) {\n  try {\n    if (!id || typeof id !== 'string') {\n      throw new Error('ID produk tidak valid');\n    }\n\n    const { nama_produk, harga_produk } = UpdateMenu.parse({\n      nama_produk: formData.get('nama_produk'),\n      harga_produk: Number(formData.get('harga_produk')),\n    });\n\n    await sql`\n      UPDATE produk\n      SET nama_produk = ${nama_produk}, harga_produk = ${harga_produk}\n      WHERE id_produk = ${id}\n    `;\n\n    revalidatePath('/admin/dashboard/menu');\n    redirect('/admin/dashboard/menu');\n  } catch (error) {\n    console.error(\"Gagal memperbarui menu:\", error);\n    throw error;\n  }\n}\n\nexport async function deleteMenu(id: string) {\n  try {\n    if (!id || typeof id !== 'string') {\n      throw new Error('ID produk tidak valid');\n    }\n\n    await sql`DELETE FROM produk WHERE id_produk = ${id}`;\n    revalidatePath('/admin/dashboard/menu');\n  } catch (error) {\n    console.error(\"Gagal menghapus menu:\", error);\n    throw error;\n  }\n}\n\nexport async function getProductById(id: number) {\n  try {\n    const result = await sql`\n      SELECT id_produk, nama_produk, harga_produk \n      FROM produk \n      WHERE id_produk = ${id}\n    `;\n\n    if (result.length === 0) {\n      return null;\n    }\n\n    return {\n      id_produk: result[0].id_produk,\n      nama_produk: result[0].nama_produk,\n      harga_produk: Number(result[0].harga_produk)\n    };\n  } catch (error) {\n    console.error(\"Gagal mendapatkan produk:\", error);\n    throw error;\n  }\n}\n\nexport async function getAllProducts() {\n  try {\n    const result = await sql`\n      SELECT id_produk, nama_produk, harga_produk \n      FROM produk \n      ORDER BY nama_produk ASC\n    `;\n\n    return result.map(row => ({\n      id_produk: row.id_produk,\n      nama_produk: row.nama_produk,\n      harga_produk: Number(row.harga_produk)\n    }));\n  } catch (error) {\n    console.error(\"Gagal mendapatkan semua produk:\", error);\n    throw error;\n  }\n}\n\nexport async function createTransaksi(formData: FormData) {\n  try {\n    const id_produk = formData.get('id_produk');\n    const nama_pembeli = formData.get('nama_pembeli');\n    const total_harga = Number(formData.get('total_harga'));\n    const quantity = Number(formData.get('quantity')) || 1;\n    const tanggal_transaksi = formData.get('tanggal_transaksi') || new Date().toISOString().split('T')[0];\n\n    const CreateTransaksiWithQuantity = z.object({\n      id_produk: z.string(),\n      nama_pembeli: z.string(),\n      total_harga: z.number(),\n      quantity: z.number().min(1),\n      tanggal_transaksi: z.string(),\n    });\n\n    const validatedData = CreateTransaksiWithQuantity.parse({\n      id_produk,\n      nama_pembeli,\n      total_harga,\n      quantity,\n      tanggal_transaksi,\n    });\n\n    await sql`\n      INSERT INTO transaksi (id_produk, nama_pembeli, total_harga, tanggal_transaksi, quantity)\n      VALUES (${validatedData.id_produk}, ${validatedData.nama_pembeli}, ${validatedData.total_harga}, ${validatedData.tanggal_transaksi}, ${validatedData.quantity})\n    `;\n\n    revalidatePath('/admin/dashboard/transaksi');\n    redirect('/admin/dashboard/transaksi');\n  } catch (error) {\n    console.error(\"Gagal membuat transaksi:\", error);\n    throw error;\n  }\n}\n\nexport async function deleteTransaksi(id: string) {\n  try {\n    if (!id || typeof id !== 'string') {\n      throw new Error('ID transaksi tidak valid');\n    }\n\n    await sql`DELETE FROM transaksi WHERE id_transaksi = ${id}`;\n    revalidatePath('/admin/dashboard/transaksi');\n  } catch (error) {\n    console.error(\"Gagal menghapus transaksi:\", error);\n    throw error;\n  }\n}\n"],"names":[],"mappings":";;;;;;IAyEsB,aAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 532, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/src/app/ui/menu/buttons.tsx"],"sourcesContent":["'use client';\n\nimport { PencilIcon, PlusIcon, TrashIcon } from '@heroicons/react/24/outline';\nimport Link from 'next/link';\nimport { deleteMenu } from '@/app/lib/actions';\nimport { alegreya } from '@/app/ui/fonts';\n\nexport function CreateProduk() {\n  return (\n    <Link\n      href=\"/admin/dashboard/menu/create\"\n      className={`flex h-10 items-center rounded-lg bg-red-800 px-4 text-base font-medium text-white transition-colors hover:bg-red-700 focus-visible:outline-offset-2 focus-visible:outline-red-600 ${alegreya.className}`}\n    >\n      <span className=\"hidden md:block\">Tambah Produk</span>{' '}\n      <PlusIcon className=\"h-5 md:ml-4\" />\n    </Link>\n  );\n}\n\nexport function UpdateProduk({ id }: { id: string }) {\n  return (\n    <Link\n      href={`/admin/dashboard/menu/${id}/edit`}\n      className={`rounded-md border p-2 hover:bg-gray-100 ${alegreya.className}`}\n    >\n      <PencilIcon className=\"w-5\" />\n    </Link>\n  );\n}\n\nexport function DeleteProduk({ id }: { id: string }) {\n  const handleSubmit = async (formData: FormData) => {\n    if (confirm('Apakah Anda yakin ingin menghapus produk ini?')) {\n      await deleteMenu(id);\n    }\n  };\n\n  return (\n    <form action={handleSubmit} className={alegreya.className}>\n      <button className=\"rounded-md border p-2 hover:bg-gray-100\">\n        <span className=\"sr-only\">Hapus</span>\n        <TrashIcon className=\"w-5\" />\n      </button>\n    </form>\n  );\n}\n"],"names":[],"mappings":";;;;;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AALA;;;;;;AAOO,SAAS;IACd,qBACE,8OAAC,4JAAA,CAAA,UAAI;QACH,MAAK;QACL,WAAW,CAAC,mLAAmL,EAAE,mLAAA,CAAA,WAAQ,CAAC,SAAS,EAAE;;0BAErN,8OAAC;gBAAK,WAAU;0BAAkB;;;;;;YAAqB;0BACvD,8OAAC,+MAAA,CAAA,WAAQ;gBAAC,WAAU;;;;;;;;;;;;AAG1B;AAEO,SAAS,aAAa,EAAE,EAAE,EAAkB;IACjD,qBACE,8OAAC,4JAAA,CAAA,UAAI;QACH,MAAM,CAAC,sBAAsB,EAAE,GAAG,KAAK,CAAC;QACxC,WAAW,CAAC,wCAAwC,EAAE,mLAAA,CAAA,WAAQ,CAAC,SAAS,EAAE;kBAE1E,cAAA,8OAAC,mNAAA,CAAA,aAAU;YAAC,WAAU;;;;;;;;;;;AAG5B;AAEO,SAAS,aAAa,EAAE,EAAE,EAAkB;IACjD,MAAM,eAAe,OAAO;QAC1B,IAAI,QAAQ,kDAAkD;YAC5D,MAAM,CAAA,GAAA,yJAAA,CAAA,aAAU,AAAD,EAAE;QACnB;IACF;IAEA,qBACE,8OAAC;QAAK,QAAQ;QAAc,WAAW,mLAAA,CAAA,WAAQ,CAAC,SAAS;kBACvD,cAAA,8OAAC;YAAO,WAAU;;8BAChB,8OAAC;oBAAK,WAAU;8BAAU;;;;;;8BAC1B,8OAAC,iNAAA,CAAA,YAAS;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAI7B","debugId":null}}]
}