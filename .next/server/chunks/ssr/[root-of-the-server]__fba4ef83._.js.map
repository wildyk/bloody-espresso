{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/src/app/lib/actions.ts"],"sourcesContent":["'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { redirect } from 'next/navigation';\nimport postgres from 'postgres';\nimport { z } from 'zod';\n\nconst sql = postgres(process.env.POSTGRES_URL!, { ssl: 'require' });\n\nconst MenuSchema = z.object({\n  id: z.string(),\n  nama_produk: z.string(),\n  harga_produk: z.number(),\n});\n\nconst CreateMenu = MenuSchema.omit({ id: true });\nconst UpdateMenu = MenuSchema.omit({ id: true });\n\nexport async function createMenu(formData: FormData) {\n  const { nama_produk, harga_produk } = CreateMenu.parse({\n    nama_produk: formData.get('nama_produk'),\n    harga_produk: Number(formData.get('harga_produk')),\n  });\n\n  await sql`\n    INSERT INTO produk (nama_produk, harga_produk)\n    VALUES (${nama_produk}, ${harga_produk})\n  `;\n\n  revalidatePath('/admin/dashboard/menu');\n  redirect('/admin/dashboard/menu');\n}\n\nexport async function updateMenu(id: string, formData: FormData) {\n  const { nama_produk, harga_produk } = UpdateMenu.parse({\n    nama_produk: formData.get('nama_produk'),\n    harga_produk: Number(formData.get('harga_produk')),\n  });\n\n  await sql`\n    UPDATE produk\n    SET nama_produk = ${nama_produk}, harga_produk = ${harga_produk}\n    WHERE id_produk = ${id}\n  `;\n\n  revalidatePath('/admin/dashboard/menu');\n  redirect('/admin/dashboard/menu');\n}\n\nexport async function deleteMenu(id: string) {\n  await sql`DELETE FROM produk WHERE id_produk = ${id}`;\n  revalidatePath('/admin/dashboard/menu');\n}\n\n// const CreateTransaksi = TransaksiSchema.omit({ id: true, tanggal_transaksi: true });\n// const UpdateTransaksi = TransaksiSchema.omit({ id: true, tanggal_transaksi: true });\n\n// export async function createTransaksi(formData: FormData) {\n//   const { id_produk, nama_pembeli, total_harga } = CreateTransaksi.parse({\n//     id_produk: formData.get('id_produk'),\n//     nama_pembeli: formData.get('nama_pembeli'),\n//     total_harga: Number(formData.get('total_harga')),\n//   });\n\n//   const tanggal_transaksi = new Date().toISOString().split('T')[0];\n\n//   await sql`\n//     INSERT INTO transaksi (id_produk, nama_pembeli, total_harga, tanggal_transaksi)\n//     VALUES (${id_produk}, ${nama_pembeli}, ${total_harga}, ${tanggal_transaksi})\n//   `;\n\n//   revalidatePath('/admin/dashboard/transaksi');\n//   redirect('/admin/dashboard/transaksi');\n// }\n\n// export async function updateTransaksi(id: string, formData: FormData) {\n//   const { id_produk, nama_pembeli, total_harga } = UpdateTransaksi.parse({\n//     id_produk: formData.get('id_produk'),\n//     nama_pembeli: formData.get('nama_pembeli'),\n//     total_harga: Number(formData.get('total_harga')),\n//   });\n\n//   await sql`\n//     UPDATE transaksi\n//     SET id_produk = ${id_produk}, nama_pembeli = ${nama_pembeli}, total_harga = ${total_harga}\n//     WHERE id_transaksi = ${id}\n//   `;\n\n//   revalidatePath('/admin/dashboard/transaksi');\n//   redirect('/admin/dashboard/transaksi');\n// }\n\n// export async function deleteTransaksi(id: string) {\n//   await sql`DELETE FROM transaksi WHERE id_transaksi = ${id}`;\n//   revalidatePath('/admin/dashboard/transaksi');\n// }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAAA;AACA;AACA;AAAA;;;;;;;;AAEA,MAAM,MAAM,CAAA,GAAA,wIAAA,CAAA,UAAQ,AAAD,EAAE,QAAQ,GAAG,CAAC,YAAY,EAAG;IAAE,KAAK;AAAU;AAEjE,MAAM,aAAa,iLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC1B,IAAI,iLAAA,CAAA,IAAC,CAAC,MAAM;IACZ,aAAa,iLAAA,CAAA,IAAC,CAAC,MAAM;IACrB,cAAc,iLAAA,CAAA,IAAC,CAAC,MAAM;AACxB;AAEA,MAAM,aAAa,WAAW,IAAI,CAAC;IAAE,IAAI;AAAK;AAC9C,MAAM,aAAa,WAAW,IAAI,CAAC;IAAE,IAAI;AAAK;AAEvC,eAAe,WAAW,QAAkB;IACjD,MAAM,EAAE,WAAW,EAAE,YAAY,EAAE,GAAG,WAAW,KAAK,CAAC;QACrD,aAAa,SAAS,GAAG,CAAC;QAC1B,cAAc,OAAO,SAAS,GAAG,CAAC;IACpC;IAEA,MAAM,GAAG,CAAC;;YAEA,EAAE,YAAY,EAAE,EAAE,aAAa;EACzC,CAAC;IAED,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;IACf,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;AACX;AAEO,eAAe,WAAW,EAAU,EAAE,QAAkB;IAC7D,MAAM,EAAE,WAAW,EAAE,YAAY,EAAE,GAAG,WAAW,KAAK,CAAC;QACrD,aAAa,SAAS,GAAG,CAAC;QAC1B,cAAc,OAAO,SAAS,GAAG,CAAC;IACpC;IAEA,MAAM,GAAG,CAAC;;sBAEU,EAAE,YAAY,iBAAiB,EAAE,aAAa;sBAC9C,EAAE,GAAG;EACzB,CAAC;IAED,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;IACf,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;AACX;AAEO,eAAe,WAAW,EAAU;IACzC,MAAM,GAAG,CAAC,qCAAqC,EAAE,GAAG,CAAC;IACrD,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;AACjB,EAEA,uFAAuF;CACvF,uFAAuF;CAEvF,8DAA8D;CAC9D,6EAA6E;CAC7E,4CAA4C;CAC5C,kDAAkD;CAClD,wDAAwD;CACxD,QAAQ;CAER,sEAAsE;CAEtE,eAAe;CACf,sFAAsF;CACtF,mFAAmF;CACnF,OAAO;CAEP,kDAAkD;CAClD,4CAA4C;CAC5C,IAAI;CAEJ,0EAA0E;CAC1E,6EAA6E;CAC7E,4CAA4C;CAC5C,kDAAkD;CAClD,wDAAwD;CACxD,QAAQ;CAER,eAAe;CACf,uBAAuB;CACvB,iGAAiG;CACjG,iCAAiC;CACjC,OAAO;CAEP,kDAAkD;CAClD,4CAA4C;CAC5C,IAAI;CAEJ,sDAAsD;CACtD,iEAAiE;CACjE,kDAAkD;CAClD,IAAI;;;IA7EkB;IAeA;IAgBA;;AA/BA,+OAAA;AAeA,+OAAA;AAgBA,+OAAA","debugId":null}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/.next-internal/server/app/admin/dashboard/menu/create/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {createMenu as '404ef95b7438f1013121e5ba800680d7f6b289d8b1'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 238, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/src/app/ui/menu/createform.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/ui/menu/createform.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/ui/menu/createform.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAkS,GAC/T,gEACA","debugId":null}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/src/app/ui/menu/createform.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/ui/menu/createform.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/ui/menu/createform.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8Q,GAC3S,4CACA","debugId":null}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 276, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/src/app/ui/menu/breadcrumbs.tsx"],"sourcesContent":["import { clsx } from 'clsx';\nimport Link from 'next/link';\nimport { alegreya } from '@/app/ui/fonts';\n\ninterface Breadcrumb {\n  label: string;\n  href: string;\n  active?: boolean;\n}\n\nexport default function Breadcrumbs({\n  breadcrumbs,\n}: {\n  breadcrumbs: Breadcrumb[];\n}) {\n  return (\n    <nav aria-label=\"Breadcrumb\" className=\"mb-6 block\">\n      <ol className={clsx(alegreya.className, 'flex text-xl md:text-2xl')}>\n        {breadcrumbs.map((breadcrumb, index) => (\n          <li\n            key={breadcrumb.href}\n            aria-current={breadcrumb.active ? 'page' : undefined}\n            className={clsx(\n              breadcrumb.active ? 'text-gray-900 font-semibold' : 'text-gray-500'\n            )}\n          >\n            <Link href={breadcrumb.href}>{breadcrumb.label}</Link>\n            {index < breadcrumbs.length - 1 && (\n              <span className=\"mx-3 inline-block\">/</span>\n            )}\n          </li>\n        ))}\n      </ol>\n    </nav>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AAAA;;;;;AAQe,SAAS,YAAY,EAClC,WAAW,EAGZ;IACC,qBACE,8OAAC;QAAI,cAAW;QAAa,WAAU;kBACrC,cAAA,8OAAC;YAAG,WAAW,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE,mLAAA,CAAA,WAAQ,CAAC,SAAS,EAAE;sBACrC,YAAY,GAAG,CAAC,CAAC,YAAY,sBAC5B,8OAAC;oBAEC,gBAAc,WAAW,MAAM,GAAG,SAAS;oBAC3C,WAAW,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EACZ,WAAW,MAAM,GAAG,gCAAgC;;sCAGtD,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAM,WAAW,IAAI;sCAAG,WAAW,KAAK;;;;;;wBAC7C,QAAQ,YAAY,MAAM,GAAG,mBAC5B,8OAAC;4BAAK,WAAU;sCAAoB;;;;;;;mBARjC,WAAW,IAAI;;;;;;;;;;;;;;;AAehC","debugId":null}},
    {"offset": {"line": 337, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/src/app/admin/dashboard/menu/create/page.tsx"],"sourcesContent":["import Form from '@/app/ui/menu/createform';\nimport Breadcrumbs from '@/app/ui/menu/breadcrumbs';\n\nexport default function CreateMenuPage() {\n  return (\n    <main>\n      <Breadcrumbs\n        breadcrumbs={[\n          { label: 'Menu', href: '/admin/dashboard/menu' },\n          { label: 'Create Menu', href: '/admin/dashboard/menu/create', active: true },\n        ]}\n      />\n      <Form />\n    </main>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,SAAS;IACtB,qBACE,8OAAC;;0BACC,8OAAC,wIAAA,CAAA,UAAW;gBACV,aAAa;oBACX;wBAAE,OAAO;wBAAQ,MAAM;oBAAwB;oBAC/C;wBAAE,OAAO;wBAAe,MAAM;wBAAgC,QAAQ;oBAAK;iBAC5E;;;;;;0BAEH,8OAAC,uIAAA,CAAA,UAAI;;;;;;;;;;;AAGX","debugId":null}}]
}