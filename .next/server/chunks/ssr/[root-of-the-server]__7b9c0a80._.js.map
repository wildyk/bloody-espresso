{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/src/app/lib/actions.ts"],"sourcesContent":["'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { redirect } from 'next/navigation';\nimport postgres from 'postgres';\nimport { z } from 'zod';\n\nconst sql = postgres(process.env.POSTGRES_URL!, { ssl: 'require' });\n\nconst MenuSchema = z.object({\n  id: z.string(),\n  nama_produk: z.string(),\n  harga_produk: z.number(),\n});\n\nconst TransaksiSchema = z.object({\n  id: z.string(),\n  id_produk: z.string(),\n  nama_pembeli: z.string(),\n  total_harga: z.number(),\n  tanggal_transaksi: z.string(),\n  quantity: z.number().optional(),\n});\n\nconst CreateMenu = MenuSchema.omit({ id: true });\nconst UpdateMenu = MenuSchema.omit({ id: true });\n\n// MENU FUNCTIONS\nexport async function createMenu(formData: FormData) {\n  try {\n    const { nama_produk, harga_produk } = CreateMenu.parse({\n      nama_produk: formData.get('nama_produk'),\n      harga_produk: Number(formData.get('harga_produk')),\n    });\n\n    await sql`\n      INSERT INTO produk (nama_produk, harga_produk)\n      VALUES (${nama_produk}, ${harga_produk})\n    `;\n\n    revalidatePath('/admin/dashboard/menu');\n    redirect('/admin/dashboard/menu');\n  } catch (error) {\n    console.error(\"Gagal membuat menu:\", error);\n    throw error;\n  }\n}\n\nexport async function updateMenu(id: string, formData: FormData) {\n  try {\n    if (!id || typeof id !== 'string') {\n      throw new Error('ID produk tidak valid');\n    }\n\n    const { nama_produk, harga_produk } = UpdateMenu.parse({\n      nama_produk: formData.get('nama_produk'),\n      harga_produk: Number(formData.get('harga_produk')),\n    });\n\n    await sql`\n      UPDATE produk\n      SET nama_produk = ${nama_produk}, harga_produk = ${harga_produk}\n      WHERE id_produk = ${id}\n    `;\n\n    revalidatePath('/admin/dashboard/menu');\n    redirect('/admin/dashboard/menu');\n  } catch (error) {\n    console.error(\"Gagal memperbarui menu:\", error);\n    throw error;\n  }\n}\n\nexport async function deleteMenu(id: string) {\n  try {\n    if (!id || typeof id !== 'string') {\n      throw new Error('ID produk tidak valid');\n    }\n\n    await sql`DELETE FROM produk WHERE id_produk = ${id}`;\n    revalidatePath('/admin/dashboard/menu');\n  } catch (error) {\n    console.error(\"Gagal menghapus menu:\", error);\n    throw error;\n  }\n}\n\nexport async function getProductById(id: number) {\n  try {\n    const result = await sql`\n      SELECT id_produk, nama_produk, harga_produk \n      FROM produk \n      WHERE id_produk = ${id}\n    `;\n\n    if (result.length === 0) {\n      return null;\n    }\n\n    return {\n      id_produk: result[0].id_produk,\n      nama_produk: result[0].nama_produk,\n      harga_produk: Number(result[0].harga_produk)\n    };\n  } catch (error) {\n    console.error(\"Gagal mendapatkan produk:\", error);\n    throw error;\n  }\n}\n\nexport async function getAllProducts() {\n  try {\n    const result = await sql`\n      SELECT id_produk, nama_produk, harga_produk \n      FROM produk \n      ORDER BY nama_produk ASC\n    `;\n\n    return result.map(row => ({\n      id_produk: row.id_produk,\n      nama_produk: row.nama_produk,\n      harga_produk: Number(row.harga_produk)\n    }));\n  } catch (error) {\n    console.error(\"Gagal mendapatkan semua produk:\", error);\n    throw error;\n  }\n}\n\nexport async function createTransaksi(formData: FormData) {\n  try {\n    const id_produk = formData.get('id_produk');\n    const nama_pembeli = formData.get('nama_pembeli');\n    const total_harga = Number(formData.get('total_harga'));\n    const quantity = Number(formData.get('quantity')) || 1;\n    const tanggal_transaksi = formData.get('tanggal_transaksi') || new Date().toISOString().split('T')[0];\n\n    const CreateTransaksiWithQuantity = z.object({\n      id_produk: z.string(),\n      nama_pembeli: z.string(),\n      total_harga: z.number(),\n      quantity: z.number().min(1),\n      tanggal_transaksi: z.string(),\n    });\n\n    const validatedData = CreateTransaksiWithQuantity.parse({\n      id_produk,\n      nama_pembeli,\n      total_harga,\n      quantity,\n      tanggal_transaksi,\n    });\n\n    await sql`\n      INSERT INTO transaksi (id_produk, nama_pembeli, total_harga, tanggal_transaksi, quantity)\n      VALUES (${validatedData.id_produk}, ${validatedData.nama_pembeli}, ${validatedData.total_harga}, ${validatedData.tanggal_transaksi}, ${validatedData.quantity})\n    `;\n\n    revalidatePath('/admin/dashboard/transaksi');\n    redirect('/admin/dashboard/transaksi');\n  } catch (error) {\n    console.error(\"Gagal membuat transaksi:\", error);\n    throw error;\n  }\n}\n\nexport async function deleteTransaksi(id: string) {\n  try {\n    if (!id || typeof id !== 'string') {\n      throw new Error('ID transaksi tidak valid');\n    }\n\n    await sql`DELETE FROM transaksi WHERE id_transaksi = ${id}`;\n    revalidatePath('/admin/dashboard/transaksi');\n  } catch (error) {\n    console.error(\"Gagal menghapus transaksi:\", error);\n    throw error;\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 263, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/.next-internal/server/app/admin/dashboard/transaksi/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {deleteTransaksi as '401f176fbe798f3cdf8865ff3478fc394557fe4dcb'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 321, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/src/app/lib/data.ts"],"sourcesContent":["import postgres from 'postgres';\nimport {\n  CustomerField,\n  CustomersTableType,\n  InvoiceForm,\n  InvoicesTable,\n  LatestInvoiceRaw,\n  Revenue,\n} from './definitions';\nimport { formatCurrency } from './utils';\n\nconst sql = postgres(process.env.POSTGRES_URL!, { ssl: 'require' });\n\nexport async function fetchProduk(id: string) {\n  try {\n    const result = await sql<{\n      id_produk: number;\n      nama_produk: string;\n      harga_produk: number;\n    }[]>`\n      SELECT id_produk, nama_produk, harga_produk \n      FROM produk \n      WHERE id_produk = ${id}\n      LIMIT 1\n    `;\n\n    return result[0]; \n  } catch (error) {\n    console.error('Database Error:', error);\n    throw new Error('Failed to fetch produk by ID.');\n  }\n  \n}\nexport async function fetchAllProduk() {\n  try {\n    const result = await sql`\n      SELECT id_produk, nama_produk, harga_produk \n      FROM produk \n      ORDER BY id_produk ASC\n    `;\n    return result;\n  } catch (error) {\n    console.error('Database Error:', error);\n    throw new Error('Failed to fetch all produk.');\n  }\n}\n\nexport async function fetchTransaksi() {\n  await new Promise((r) => setTimeout(r, 1500));\n  try {\nconst transaksi = await sql<{\n  id_transaksi: number;\n  id_produk: number;\n  nama_pembeli: string;\n  tanggal_transaksi: string;\n  total_harga: number;\n  quantity: number;\n}[]>`\n  SELECT id_transaksi, id_produk, nama_pembeli, tanggal_transaksi, total_harga, quantity\n  FROM transaksi\n  ORDER BY tanggal_transaksi ASC\n`;\n    return transaksi;\n  } catch (error) {\n    console.error('Database Error:', error);\n    throw new Error('Failed to fetch transaksi.');\n  }\n}\n\nexport async function fetchAnalytics() {\n  await new Promise((resolve) => setTimeout(resolve, 1500)); \n  try {\n    // Query 1: total produk\n    const totalProdukRes = await sql`SELECT COUNT(*) FROM produk`;\n    const totalProduk = Number(totalProdukRes[0].count);\n\n    // Query 2: total revenue (jumlah total_harga dari transaksi)\n    const totalRevenueRes = await sql`SELECT SUM(total_harga) FROM transaksi`;\n    const totalRevenue = Number(totalRevenueRes[0].sum || 0);\n\n    // Query 3: produk paling sering muncul di transaksi\n    const mostSoldRes = await sql`\n      SELECT p.nama_produk, COUNT(t.id_produk) AS jumlah_terjual\n      FROM transaksi t\n      JOIN produk p ON t.id_produk = p.id_produk\n      GROUP BY p.nama_produk\n      ORDER BY jumlah_terjual DESC\n      LIMIT 1;\n    `;\n    const mostSold = mostSoldRes[0];\n\n    return {\n      totalProduk,\n      totalRevenue,\n      mostSold: mostSold?.nama_produk || '-',\n      jumlahTerjual: mostSold?.jumlah_terjual || 0,\n    };\n  } catch (err) {\n    console.error('DB Error (analytics):', err);\n    throw new Error('Failed to fetch analytics data.');\n  }\n}\n\nexport async function fetchPenjualanProduk() {\n  await new Promise((resolve) => setTimeout(resolve, 2000)); \n  try {\n    const data = await sql<{ nama_produk: string; jumlah_terjual: number }[]>`\n      SELECT p.nama_produk, COUNT(t.id_produk) AS jumlah_terjual\n      FROM transaksi t\n      JOIN produk p ON t.id_produk = p.id_produk\n      GROUP BY p.nama_produk\n      ORDER BY jumlah_terjual DESC\n    `;\n    return data;\n  } catch (err) {\n    console.error('DB Error (grafik):', err);\n    throw new Error('Gagal ambil data grafik penjualan.');\n  }\n}\n\nexport async function fetchProdukWithFoto() {\n  const produk = await sql<{\n    id_produk: number;\n    nama_produk: string;\n    harga_produk: number;\n    foto: string;\n  }[]>`SELECT * FROM menu ORDER BY id_produk ASC`;\n  return produk;\n}\n\n\n// Fungsi untuk menambah item ke keranjang (cart)\nexport async function addToCart(cartData: {\n  id_produk: number;\n  nama_produk: string;\n  quantity: number;\n  harga_produk: number;\n  total_harga: number;\n}) {\n  try {\n    const result = await sql`\n      INSERT INTO cart (id_produk, nama_produk, quantity, harga_produk, total_harga, created_at)\n      VALUES (${cartData.id_produk}, ${cartData.nama_produk}, ${cartData.quantity}, ${cartData.harga_produk}, ${cartData.total_harga}, NOW())\n      RETURNING *\n    `;\n    return result[0];\n  } catch (error) {\n    console.error('Database Error:', error);\n    throw new Error('Failed to add to cart');\n  }\n}\n\n// Fungsi untuk membuat transaksi langsung\nexport async function createTransaksi(transaksiData: {\n  id_produk: number;\n  nama_pembeli: string;\n  quantity: number;\n  total_harga: number;\n}) {\n  try {\n    const result = await sql`\n      INSERT INTO transaksi (id_produk, nama_pembeli, tanggal_transaksi, total_harga, quantity)\n      VALUES (${transaksiData.id_produk}, ${transaksiData.nama_pembeli}, NOW(), ${transaksiData.total_harga}, ${transaksiData.quantity})\n      RETURNING *\n    `;\n    return result[0];\n  } catch (error) {\n    console.error('Database Error:', error);\n    throw new Error('Failed to create transaction');\n  }\n}\n\n// Fungsi untuk mengambil cart items\nexport async function fetchCartItems() {\n  try {\n    const result = await sql`\n      SELECT c.*, m.nama_produk, m.foto \n      FROM cart c\n      JOIN menu m ON c.id_produk = m.id_produk\n      ORDER BY c.created_at DESC\n    `;\n    return result;\n  } catch (error) {\n    console.error('Database Error:', error);\n    throw new Error('Failed to fetch cart items');\n  }\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 474, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/src/app/ui/transaksi/buttons.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const CreateTransaksi = registerClientReference(\n    function() { throw new Error(\"Attempted to call CreateTransaksi() from the server but CreateTransaksi is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/ui/transaksi/buttons.tsx <module evaluation>\",\n    \"CreateTransaksi\",\n);\nexport const DeleteProduk = registerClientReference(\n    function() { throw new Error(\"Attempted to call DeleteProduk() from the server but DeleteProduk is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/ui/transaksi/buttons.tsx <module evaluation>\",\n    \"DeleteProduk\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,kEACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,kEACA","debugId":null}},
    {"offset": {"line": 492, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/src/app/ui/transaksi/buttons.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const CreateTransaksi = registerClientReference(\n    function() { throw new Error(\"Attempted to call CreateTransaksi() from the server but CreateTransaksi is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/ui/transaksi/buttons.tsx\",\n    \"CreateTransaksi\",\n);\nexport const DeleteProduk = registerClientReference(\n    function() { throw new Error(\"Attempted to call DeleteProduk() from the server but DeleteProduk is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/ui/transaksi/buttons.tsx\",\n    \"DeleteProduk\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,8CACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,8CACA","debugId":null}},
    {"offset": {"line": 510, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 520, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/src/app/ui/transaksi/table.tsx"],"sourcesContent":["import { fetchTransaksi } from \"@/app/lib/data\";\nimport { alegreya } from \"@/app/ui/fonts\";\nimport { DeleteProduk } from \"@/app/ui/transaksi/buttons\";\n\nexport default async function TransaksiTable({\n  searchParams,\n}: {\n  searchParams: { query?: string; page?: string };\n}) {\n  const query = searchParams.query?.toLowerCase() || \"\";\n  const currentPage = parseInt(searchParams.page || \"1\", 10);\n  const itemsPerPage = 5;\n\n  const transaksiList = await fetchTransaksi();\n\n  const filtered = transaksiList.filter(\n    (transaksi) =>\n      transaksi.nama_pembeli.toLowerCase().includes(query) ||\n      transaksi.id_transaksi.toString().includes(query) ||\n      transaksi.id_produk.toString().includes(query)\n  );\n\n  const totalItems = filtered.length;\n  const totalPages = Math.ceil(totalItems / itemsPerPage);\n  const paginated = filtered.slice(\n    (currentPage - 1) * itemsPerPage,\n    currentPage * itemsPerPage\n  );\n\n  return (\n    <>\n      <div className=\"mt-8 flow-root\">\n        <div className=\"inline-block min-w-full align-middle\">\n          <div className=\"overflow-hidden rounded-xl border border-gray-200 bg-white\">\n            {/* Table Header */}\n            <div className=\"border-b border-gray-200 bg-red-900 px-6 py-4\">\n              <h3 className=\"text-xl font-semibold text-white\">\n                Daftar Transaksi\n              </h3>\n              <p className=\"text-white text-lg mt-1\">\n                Total {totalItems} transaksi ditemukan\n              </p>\n            </div>\n\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50 border-b border-gray-200\">\n                <tr>\n                  <th\n                    scope=\"col\"\n                    className={`${alegreya.className} px-6 py-4 text-left text-sm font-medium text-gray-500 uppercase tracking-wider`}\n                  >\n                    ID Transaksi\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className={`${alegreya.className} px-6 py-4 text-left text-sm font-medium text-gray-500 uppercase tracking-wider`}\n                  >\n                    ID Produk\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className={`${alegreya.className} px-6 py-4 text-left text-sm font-medium text-gray-500 uppercase tracking-wider`}\n                  >\n                    Nama Pembeli\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className={`${alegreya.className} px-6 py-4 text-left text-sm font-medium text-gray-500 uppercase tracking-wider`}\n                  >\n                    Tanggal\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className={`${alegreya.className} px-6 py-4 text-left text-sm font-medium text-gray-500 uppercase tracking-wider`}\n                  >\n                    Total Harga\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {paginated.map((transaksi) => (\n                  <tr\n                    key={transaksi.id_transaksi}\n                    className=\"hover:bg-gray-50 transition-colors duration-200\"\n                  >\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-xl font-medium text-gray-900\">\n                        {transaksi.id_transaksi}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-xl font-medium text-gray-900\">\n                        {transaksi.id_produk}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-lg font-semibold text-gray-900\">\n                        {transaksi.nama_pembeli}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className=\"inline-flex items-center px-3 py-1 rounded-full text-lg font-medium bg-blue-100 text-blue-800 border border-blue-200\">\n                        {new Date(\n                          transaksi.tanggal_transaksi\n                        ).toLocaleDateString(\"id-ID\")}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className=\"inline-flex items-center px-3 py-1 rounded-full text-lg font-medium bg-green-100 text-green-800 border border-green-200\">\n                        Rp {transaksi.total_harga.toLocaleString(\"id-ID\")}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-center\">\n                      <div className=\"flex justify-center gap-3\">\n                        <DeleteProduk id={transaksi.id_transaksi.toString()} />\n                      </div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n\n            {/* Empty State */}\n            {paginated.length === 0 && (\n              <div className=\"text-center py-12 border-t border-gray-200\">\n                <div className=\"mx-auto h-24 w-24 text-gray-400\">\n                  <svg\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={1}\n                      d=\"M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01\"\n                    ></path>\n                  </svg>\n                </div>\n                <h3 className=\"mt-4 text-lg font-medium text-gray-900\">\n                  Tidak ada transaksi ditemukan\n                </h3>\n                <p className=\"mt-2 text-sm text-gray-500\">\n                  {query\n                    ? `Tidak ada hasil untuk pencarian \"${query}\"`\n                    : \"Belum ada transaksi yang dicatat\"}\n                </p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Enhanced Pagination */}\n      {totalPages > 1 && (\n        <div className=\"mt-8 flex flex-col sm:flex-row items-center justify-between gap-4 p-4 bg-white border border-gray-200 rounded-lg\">\n          <div className=\"text-sm text-gray-700\">\n            Menampilkan{\" \"}\n            <span className=\"font-medium\">\n              {(currentPage - 1) * itemsPerPage + 1}\n            </span>{\" \"}\n            sampai{\" \"}\n            <span className=\"font-medium\">\n              {Math.min(currentPage * itemsPerPage, totalItems)}\n            </span>{\" \"}\n            dari <span className=\"font-medium\">{totalItems}</span> transaksi\n          </div>\n\n          <div className=\"flex items-center gap-2\">\n            {/* Previous Button */}\n            {currentPage > 1 && (\n              <a\n                href={`?${new URLSearchParams({\n                  ...Object.fromEntries(\n                    Object.entries(searchParams).filter(\n                      ([key]) => key !== \"page\"\n                    )\n                  ),\n                  page: String(currentPage - 1),\n                }).toString()}`}\n                className=\"relative inline-flex items-center rounded-md border border-gray-300 bg-white px-3 py-2 text-lg font-medium text-gray-500 hover:bg-gray-50 focus:z-20 focus:outline-offset-0 transition-colors duration-200\"\n              >\n                <svg\n                  className=\"h-4 w-4\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M15 19l-7-7 7-7\"\n                  />\n                </svg>\n                <span className=\"ml-1 hidden sm:block\">Sebelumnya</span>\n              </a>\n            )}\n\n            {/* Page Numbers */}\n            <div className=\"flex items-center gap-1\">\n              {[...Array(totalPages)].map((_, i) => {\n                const page = i + 1;\n                const params = new URLSearchParams();\n\n                Object.entries(searchParams).forEach(([key, value]) => {\n                  if (value && key !== \"page\") params.set(key, value);\n                });\n\n                params.set(\"page\", String(page));\n                const href = `?${params.toString()}`;\n\n                return (\n                  <a\n                    key={page}\n                    href={href}\n                    className={`relative inline-flex items-center px-4 py-2 text-lg font-medium border transition-colors duration-200 ${\n                      page === currentPage\n                        ? \"z-10 bg-red-900 text-white focus:z-20 focus-visible:outline-offset-2 focus-visible:outline-red-600 rounded-md\"\n                        : \"text-gray-900 border-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0 rounded-md bg-white\"\n                    }`}\n                  >\n                    {page}\n                  </a>\n                );\n              })}\n            </div>\n\n            {/* Next Button */}\n            {currentPage < totalPages && (\n              <a\n                href={`?${new URLSearchParams({\n                  ...Object.fromEntries(\n                    Object.entries(searchParams).filter(\n                      ([key]) => key !== \"page\"\n                    )\n                  ),\n                  page: String(currentPage + 1),\n                }).toString()}`}\n                className=\"relative inline-flex items-center rounded-md border border-gray-300 bg-white px-3 py-2 text-lg font-medium text-gray-500 hover:bg-gray-50 focus:z-20 focus:outline-offset-0 transition-colors duration-200\"\n              >\n                <span className=\"mr-1 hidden sm:block\">Selanjutnya</span>\n                <svg\n                  className=\"h-4 w-4\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M9 5l7 7-7 7\"\n                  />\n                </svg>\n              </a>\n            )}\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1008, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/src/app/admin/dashboard/transaksi/transaksitablewrapper.tsx"],"sourcesContent":["import TransaksiTable from '@/app/ui/transaksi/table';\n\ninterface Props {\n  searchParams?: { [key: string]: string | string[] | undefined };\n}\n\nexport default async function TransaksiTableWrapper({ searchParams }: Props) {\n  return (\n    <>\n      <TransaksiTable searchParams={searchParams || {}} />\n    </>\n  );\n}"],"names":[],"mappings":";;;;AAAA;;;AAMe,eAAe,sBAAsB,EAAE,YAAY,EAAS;IACzE,qBACE;kBACE,cAAA,8OAAC,uIAAA,CAAA,UAAc;YAAC,cAAc,gBAAgB,CAAC;;;;;;;AAGrD","debugId":null}},
    {"offset": {"line": 1032, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/src/app/ui/search.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/ui/search.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/ui/search.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAyR,GACtT,uDACA","debugId":null}},
    {"offset": {"line": 1046, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/src/app/ui/search.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/ui/search.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/ui/search.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAqQ,GAClS,mCACA","debugId":null}},
    {"offset": {"line": 1060, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1070, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/src/app/admin/dashboard/transaksi/page.tsx"],"sourcesContent":["import { Suspense } from 'react';\r\nimport TransaksiSkeleton from './transaksiskeleton';\r\nimport TransaksiTableWrapper from './transaksitablewrapper';\r\nimport Search from '@/app/ui/search';\r\nimport { CreateTransaksi } from '@/app/ui/transaksi/buttons';\r\n\r\ninterface Props {\r\n  searchParams?: { [key: string]: string | string[] | undefined };\r\n}\r\n\r\nexport default function TransaksiPage({ searchParams }: Props) {\r\n  const query = (searchParams?.query as string) || '';\r\n  const currentPage = Number(searchParams?.page) || 1;\r\n\r\n  return (\r\n    <section className=\"p-6\">\r\n      <div className=\"mb-6 flex flex-col gap-4 sm:flex-row sm:items-center sm:justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold text-gray-800\">Kelola Transaksi</h1>\r\n          {query && (\r\n            <p className=\"mt-1 text-sm text-gray-600\">\r\n              Menampilkan hasil pencarian untuk: \"{query}\"\r\n            </p>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"flex w-full flex-col gap-2 sm:w-auto sm:flex-row sm:items-center\">\r\n          <div className=\"sm:w-64\">\r\n            <Search placeholder=\"Cari transaksi...\" />\r\n          </div>\r\n          <CreateTransaksi />\r\n        </div>\r\n      </div>\r\n\r\n      <Suspense fallback={<TransaksiSkeleton />}>\r\n        <TransaksiTableWrapper searchParams={searchParams} />\r\n      </Suspense>\r\n    </section>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;AAMe,SAAS,cAAc,EAAE,YAAY,EAAS;IAC3D,MAAM,QAAQ,AAAC,cAAc,SAAoB;IACjD,MAAM,cAAc,OAAO,cAAc,SAAS;IAElD,qBACE,8OAAC;QAAQ,WAAU;;0BACjB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;;0CACC,8OAAC;gCAAG,WAAU;0CAAmC;;;;;;4BAChD,uBACC,8OAAC;gCAAE,WAAU;;oCAA6B;oCACH;oCAAM;;;;;;;;;;;;;kCAKjD,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC,2HAAA,CAAA,UAAM;oCAAC,aAAY;;;;;;;;;;;0CAEtB,8OAAC,yIAAA,CAAA,kBAAe;;;;;;;;;;;;;;;;;0BAIpB,8OAAC,qMAAA,CAAA,WAAQ;gBAAC,wBAAU,8OAAC,mKAAA,CAAA,UAAiB;;;;;0BACpC,cAAA,8OAAC,uKAAA,CAAA,UAAqB;oBAAC,cAAc;;;;;;;;;;;;;;;;;AAI7C","debugId":null}}]
}