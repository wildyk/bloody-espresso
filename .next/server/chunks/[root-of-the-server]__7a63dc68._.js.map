{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/src/app/lib/db.ts"],"sourcesContent":["// lib/db.ts\r\nimport { Pool } from 'pg'; // Import Pool dari pg\r\n\r\nconst pool = new Pool({\r\n  connectionString: process.env.DATABASE_URL,\r\n  ssl: {\r\n    rejectUnauthorized: false, // Wajib false untuk Neon!\r\n  },\r\n});\r\n\r\nexport default pool;\r\n"],"names":[],"mappings":"AAAA,YAAY;;;;AACZ,kLAA2B,sBAAsB;;;;;;AAEjD,MAAM,OAAO,IAAI,oGAAA,CAAA,OAAI,CAAC;IACpB,kBAAkB,QAAQ,GAAG,CAAC,YAAY;IAC1C,KAAK;QACH,oBAAoB;IACtB;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/src/app/api/checkout/route.ts"],"sourcesContent":["import pool from '../../lib/db';\nimport { NextResponse } from 'next/server';\n\nexport async function POST(req: Request) {\n  const client = await pool.connect();\n  try {\n    const result = await client.query('SELECT NOW()');\n    return NextResponse.json({ time: result.rows[0] }); // Balikin waktu sekarang dari database\n  } catch (err: unknown) {\n    const errorMessage =\n      err instanceof Error ? err.message : 'Terjadi kesalahan tak terduga';\n    return NextResponse.json({ error: errorMessage }, { status: 500 });\n  } finally {\n    client.release();\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;;;;;AAEO,eAAe,KAAK,GAAY;IACrC,MAAM,SAAS,MAAM,yHAAA,CAAA,UAAI,CAAC,OAAO;IACjC,IAAI;QACF,MAAM,SAAS,MAAM,OAAO,KAAK,CAAC;QAClC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,MAAM,OAAO,IAAI,CAAC,EAAE;QAAC,IAAI,uCAAuC;IAC7F,EAAE,OAAO,KAAc;QACrB,MAAM,eACJ,eAAe,QAAQ,IAAI,OAAO,GAAG;QACvC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAa,GAAG;YAAE,QAAQ;QAAI;IAClE,SAAU;QACR,OAAO,OAAO;IAChB;AACF","debugId":null}}]
}