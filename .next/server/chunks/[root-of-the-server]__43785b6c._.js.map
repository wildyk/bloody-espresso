{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/src/app/api/menu/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport { sql } from \"@vercel/postgres\";\n\nexport async function GET() {\n  try {\n    const { rows } = await sql`SELECT * FROM products ORDER BY id ASC`;\n    return NextResponse.json(rows);\n  } catch (error) {\n    console.error(\"Error fetch menu:\", error);\n    return NextResponse.json({ error: \"Gagal mengambil data menu.\" }, { status: 500 });\n  }\n}\n\nexport async function POST(req: Request) {\n  const { name, price } = await req.json();\n\n  try {\n    const result = await sql`\n      INSERT INTO products (name, price)\n      VALUES (${name}, ${price})\n      RETURNING *;\n    `;\n    return NextResponse.json(result.rows[0]);\n  } catch (error) {\n    console.error(\"Error tambah menu:\", error);\n    return NextResponse.json({ error: \"Gagal menambah menu.\" }, { status: 500 });\n  }\n}\n\nexport async function PUT(req: Request, { params }: { params: { id: string } }) {\n  const { name, price } = await req.json();\n\n  try {\n    await sql`\n      UPDATE products\n      SET name = ${name}, price = ${price}\n      WHERE id = ${params.id};\n    `;\n    return NextResponse.json({ message: \"Menu berhasil diupdate.\" });\n  } catch (error) {\n    console.error(\"Error update menu:\", error);\n    return NextResponse.json({ error: \"Gagal update menu.\" }, { status: 500 });\n  }\n}\n\nexport async function DELETE(req: Request, { params }: { params: { id: string } }) {\n  try {\n    await sql`DELETE FROM products WHERE id = ${params.id};`;\n    return NextResponse.json({ message: \"Menu berhasil dihapus.\" });\n  } catch (error) {\n    console.error(\"Error hapus menu:\", error);\n    return NextResponse.json({ error: \"Gagal hapus menu.\" }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAAA;;;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,mLAAA,CAAA,MAAG,CAAC,sCAAsC,CAAC;QAClE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,qBAAqB;QACnC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA6B,GAAG;YAAE,QAAQ;QAAI;IAClF;AACF;AAEO,eAAe,KAAK,GAAY;IACrC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,IAAI;IAEtC,IAAI;QACF,MAAM,SAAS,MAAM,mLAAA,CAAA,MAAG,CAAC;;cAEf,EAAE,KAAK,EAAE,EAAE,MAAM;;IAE3B,CAAC;QACD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,EAAE;IACzC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,sBAAsB;QACpC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAuB,GAAG;YAAE,QAAQ;QAAI;IAC5E;AACF;AAEO,eAAe,IAAI,GAAY,EAAE,EAAE,MAAM,EAA8B;IAC5E,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,IAAI;IAEtC,IAAI;QACF,MAAM,mLAAA,CAAA,MAAG,CAAC;;iBAEG,EAAE,KAAK,UAAU,EAAE,MAAM;iBACzB,EAAE,OAAO,EAAE,CAAC;IACzB,CAAC;QACD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAA0B;IAChE,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,sBAAsB;QACpC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAqB,GAAG;YAAE,QAAQ;QAAI;IAC1E;AACF;AAEO,eAAe,OAAO,GAAY,EAAE,EAAE,MAAM,EAA8B;IAC/E,IAAI;QACF,MAAM,mLAAA,CAAA,MAAG,CAAC,gCAAgC,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;QACxD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAyB;IAC/D,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,qBAAqB;QACnC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAoB,GAAG;YAAE,QAAQ;QAAI;IACzE;AACF","debugId":null}}]
}