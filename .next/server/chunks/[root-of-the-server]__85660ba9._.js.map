{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/src/app/lib/db.ts"],"sourcesContent":["import { Pool } from 'pg'; // Import Pool dari pg\r\n\r\nconst pool = new Pool({\r\n  connectionString: process.env.DATABASE_URL,\r\n  ssl: {\r\n    rejectUnauthorized: false, // Wajib false untuk Neon!\r\n  },\r\n});\r\n\r\nexport default pool;\r\n"],"names":[],"mappings":";;;AAAA,kLAA2B,sBAAsB;;;;;;AAEjD,MAAM,OAAO,IAAI,oGAAA,CAAA,OAAI,CAAC;IACpB,kBAAkB,QAAQ,GAAG,CAAC,YAAY;IAC1C,KAAK;QACH,oBAAoB;IACtB;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/src/app/lib/jwt.ts"],"sourcesContent":["import jwt from 'jsonwebtoken';\n\nexport function signToken(payload: any) {\n  const secret = process.env.JWT_SECRET;\n  \n  if (!secret) {\n    throw new Error('JWT_SECRET is not defined in environment variables');\n  }\n  \n  return jwt.sign(payload, secret, { expiresIn: '24h' });\n}\n\nexport function verifyToken(token: string) {\n  const secret = process.env.JWT_SECRET;\n  \n  if (!secret) {\n    throw new Error('JWT_SECRET is not defined in environment variables');\n  }\n  \n  return jwt.verify(token, secret);\n}"],"names":[],"mappings":";;;;AAAA;;AAEO,SAAS,UAAU,OAAY;IACpC,MAAM,SAAS,QAAQ,GAAG,CAAC,UAAU;IAErC,IAAI,CAAC,QAAQ;QACX,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO,uIAAA,CAAA,UAAG,CAAC,IAAI,CAAC,SAAS,QAAQ;QAAE,WAAW;IAAM;AACtD;AAEO,SAAS,YAAY,KAAa;IACvC,MAAM,SAAS,QAAQ,GAAG,CAAC,UAAU;IAErC,IAAI,CAAC,QAAQ;QACX,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO,uIAAA,CAAA,UAAG,CAAC,MAAM,CAAC,OAAO;AAC3B","debugId":null}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/src/app/api/auth/login/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport pool from '@/app/lib/db';\nimport bcrypt from 'bcryptjs';\nimport { signToken } from '@/app/lib/jwt';\n\nexport async function POST(req: NextRequest) {\n  try {\n    const { email, password } = await req.json();\n    \n    console.log('Login attempt:', { email }); // Debug log\n    \n    const user = await pool.query('SELECT * FROM users WHERE email = $1', [email]);\n    \n    if (user.rows.length === 0) {\n      return NextResponse.json({ message: 'Email tidak ditemukan' }, { status: 400 });\n    }\n\n    const valid = await bcrypt.compare(password, user.rows[0].password);\n    if (!valid) {\n      return NextResponse.json({ message: 'Password salah' }, { status: 400 });\n    }\n\n    const token = signToken({ id: user.rows[0].id, email: user.rows[0].email });\n\n    return NextResponse.json({ token }, { status: 200 });\n    \n  } catch (error) {\n    console.error('Login error:', error); // Debug log\n    const errorMessage = error instanceof Error ? error.message : String(error);\n    return NextResponse.json({ message: 'Server error: ' + errorMessage }, { status: 500 });\n  }\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;;;;;AAEO,eAAe,KAAK,GAAgB;IACzC,IAAI;QACF,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,IAAI;QAE1C,QAAQ,GAAG,CAAC,kBAAkB;YAAE;QAAM,IAAI,YAAY;QAEtD,MAAM,OAAO,MAAM,yHAAA,CAAA,UAAI,CAAC,KAAK,CAAC,wCAAwC;YAAC;SAAM;QAE7E,IAAI,KAAK,IAAI,CAAC,MAAM,KAAK,GAAG;YAC1B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAAwB,GAAG;gBAAE,QAAQ;YAAI;QAC/E;QAEA,MAAM,QAAQ,MAAM,mIAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU,KAAK,IAAI,CAAC,EAAE,CAAC,QAAQ;QAClE,IAAI,CAAC,OAAO;YACV,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAAiB,GAAG;gBAAE,QAAQ;YAAI;QACxE;QAEA,MAAM,QAAQ,CAAA,GAAA,0HAAA,CAAA,YAAS,AAAD,EAAE;YAAE,IAAI,KAAK,IAAI,CAAC,EAAE,CAAC,EAAE;YAAE,OAAO,KAAK,IAAI,CAAC,EAAE,CAAC,KAAK;QAAC;QAEzE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE;QAAM,GAAG;YAAE,QAAQ;QAAI;IAEpD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gBAAgB,QAAQ,YAAY;QAClD,MAAM,eAAe,iBAAiB,QAAQ,MAAM,OAAO,GAAG,OAAO;QACrE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS,mBAAmB;QAAa,GAAG;YAAE,QAAQ;QAAI;IACvF;AACF","debugId":null}}]
}