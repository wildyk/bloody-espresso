{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/src/app/lib/actions.ts"],"sourcesContent":["'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { redirect } from 'next/navigation';\nimport postgres from 'postgres';\nimport { z } from 'zod';\n\nconst sql = postgres(process.env.POSTGRES_URL!, { ssl: 'require' });\n\nconst MenuSchema = z.object({\n  id: z.string(),\n  nama_produk: z.string(),\n  harga_produk: z.number(),\n});\n\nconst TransaksiSchema = z.object({\n  id: z.string(),\n  id_produk: z.string(),\n  nama_pembeli: z.string(),\n  total_harga: z.number(),\n  tanggal_transaksi: z.string(),\n});\n\nconst CreateMenu = MenuSchema.omit({ id: true });\nconst UpdateMenu = MenuSchema.omit({ id: true });\nconst CreateTransaksi = TransaksiSchema.omit({ id: true, tanggal_transaksi: true });\n\nexport async function createMenu(formData: FormData) {\n  const { nama_produk, harga_produk } = CreateMenu.parse({\n    nama_produk: formData.get('nama_produk'),\n    harga_produk: Number(formData.get('harga_produk')),\n  });\n\n  await sql`\n    INSERT INTO produk (nama_produk, harga_produk)\n    VALUES (${nama_produk}, ${harga_produk})\n  `;\n\n  revalidatePath('/admin/dashboard/menu');\n  redirect('/admin/dashboard/menu');\n}\n\nexport async function updateMenu(id: string, formData: FormData) {\n  const { nama_produk, harga_produk } = UpdateMenu.parse({\n    nama_produk: formData.get('nama_produk'),\n    harga_produk: Number(formData.get('harga_produk')),\n  });\n\n  await sql`\n    UPDATE produk\n    SET nama_produk = ${nama_produk}, harga_produk = ${harga_produk}\n    WHERE id_produk = ${id}\n  `;\n\n  revalidatePath('/admin/dashboard/menu');\n  redirect('/admin/dashboard/menu');\n}\n\nexport async function deleteMenu(id: string) {\n  await sql`DELETE FROM produk WHERE id_produk = ${id}`;\n  revalidatePath('/admin/dashboard/menu');\n}\n\nexport async function createTransaksi(formData: FormData) {\n  const { id_produk, nama_pembeli, total_harga } = CreateTransaksi.parse({\n    id_produk: formData.get('id_produk'),\n    nama_pembeli: formData.get('nama_pembeli'),\n    total_harga: Number(formData.get('total_harga')),\n  });\n\n  const tanggal_transaksi = new Date().toISOString().split('T')[0];\n\n  await sql`\n    INSERT INTO transaksi (id_produk, nama_pembeli, total_harga, tanggal_transaksi)\n    VALUES (${id_produk}, ${nama_pembeli}, ${total_harga}, ${tanggal_transaksi})\n  `;\n\n  revalidatePath('/admin/dashboard/transaksi');\n  redirect('/admin/dashboard/transaksi');\n}\n\n"],"names":[],"mappings":";;;;;;IA+DsB,kBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/src/app/ui/button.tsx"],"sourcesContent":["import clsx from 'clsx';\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  children: React.ReactNode;\n}\n\nexport function Button({ children, className, ...rest }: ButtonProps) {\n  return (\n    <button\n      {...rest}\n      className={clsx(\n        'flex h-10 items-center rounded-lg bg-red-800 px-4 text-sm font-medium text-white transition-colors hover:bg-red-700  focus-visible:outline-offset-2 focus-visible:outline-red-800 active:bg-red-700 aria-disabled:cursor-not-allowed aria-disabled:opacity-50',\n        className,\n      )}\n    >\n      {children}\n    </button>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAMO,SAAS,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,MAAmB;IAClE,qBACE,6LAAC;QACE,GAAG,IAAI;QACR,WAAW,CAAA,GAAA,wIAAA,CAAA,UAAI,AAAD,EACZ,iQACA;kBAGD;;;;;;AAGP;KAZgB","debugId":null}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/src/app/ui/transaksi/createform.tsx"],"sourcesContent":["'use client';\n\nimport { useActionState } from 'react';\nimport { createTransaksi } from '@/app/lib/actions';\nimport { Button } from '@/app/ui/button';\n\nexport default function CreateTransaksiForm({ produkList }: { produkList: any[] }) {\n  const initialState = { message: null, errors: {} };\n  const [state, formAction] = useActionState(createTransaksi, initialState);\n\n  return (\n    <form action={formAction} className=\"space-y-4\">\n      {/* Pilih Produk */}\n      <div>\n        <label htmlFor=\"id_produk\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n          Pilih Produk *\n        </label>\n        <select\n          id=\"id_produk\"\n          name=\"id_produk\"\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          defaultValue=\"\"\n          required\n        >\n          <option value=\"\" disabled>\n            -- Pilih Produk --\n          </option>\n          {produkList.map((produk) => (\n            <option key={produk.id} value={produk.id}>\n              {produk.nama} - Rp {produk.harga.toLocaleString()}\n            </option>\n          ))}\n        </select>\n        {state.errors?.id_produk && (\n          <div className=\"mt-1 text-sm text-red-600\">\n            {state.errors.id_produk.map((error: string) => (\n              <p key={error}>{error}</p>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Nama Pembeli */}\n      <div>\n        <label htmlFor=\"nama_pembeli\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n          Nama Pembeli *\n        </label>\n        <input\n          type=\"text\"\n          id=\"nama_pembeli\"\n          name=\"nama_pembeli\"\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          placeholder=\"Masukkan nama pembeli\"\n          required\n        />\n        {state.errors?.nama_pembeli && (\n          <div className=\"mt-1 text-sm text-red-600\">\n            {state.errors.nama_pembeli.map((error: string) => (\n              <p key={error}>{error}</p>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Total Harga */}\n      <div>\n        <label htmlFor=\"total_harga\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n          Total Harga *\n        </label>\n        <input\n          type=\"number\"\n          id=\"total_harga\"\n          name=\"total_harga\"\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          placeholder=\"0\"\n          min=\"1\"\n          step=\"1000\"\n          required\n        />\n        {state.errors?.total_harga && (\n          <div className=\"mt-1 text-sm text-red-600\">\n            {state.errors.total_harga.map((error: string) => (\n              <p key={error}>{error}</p>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Error Message */}\n      {state.message && (\n        <div className=\"p-3 bg-red-50 border border-red-200 rounded-md\">\n          <p className=\"text-sm text-red-600\">{state.message}</p>\n        </div>\n      )}\n\n      {/* Submit Button */}\n      <div className=\"flex justify-end space-x-2\">\n        <Button type=\"button\" variant=\"outline\" onClick={() => window.history.back()}>\n          Batal\n        </Button>\n        <Button type=\"submit\">\n          Simpan Transaksi\n        </Button>\n      </div>\n    </form>\n  );\n}\n\n// Helper function untuk debugging FormData\nexport function debugFormData(formData: FormData) {\n  const data: { [key: string]: any } = {};\n  for (const [key, value] of formData.entries()) {\n    data[key] = value;\n  }\n  console.log('FormData contents:', data);\n  return data;\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;;;AAJA;;;;AAMe,SAAS,oBAAoB,EAAE,UAAU,EAAyB;;IAC/E,MAAM,eAAe;QAAE,SAAS;QAAM,QAAQ,CAAC;IAAE;IACjD,MAAM,CAAC,OAAO,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,iBAAc,AAAD,EAAE,4JAAA,CAAA,kBAAe,EAAE;IAE5D,qBACE,6LAAC;QAAK,QAAQ;QAAY,WAAU;;0BAElC,6LAAC;;kCACC,6LAAC;wBAAM,SAAQ;wBAAY,WAAU;kCAA+C;;;;;;kCAGpF,6LAAC;wBACC,IAAG;wBACH,MAAK;wBACL,WAAU;wBACV,cAAa;wBACb,QAAQ;;0CAER,6LAAC;gCAAO,OAAM;gCAAG,QAAQ;0CAAC;;;;;;4BAGzB,WAAW,GAAG,CAAC,CAAC,uBACf,6LAAC;oCAAuB,OAAO,OAAO,EAAE;;wCACrC,OAAO,IAAI;wCAAC;wCAAO,OAAO,KAAK,CAAC,cAAc;;mCADpC,OAAO,EAAE;;;;;;;;;;;oBAKzB,MAAM,MAAM,EAAE,2BACb,6LAAC;wBAAI,WAAU;kCACZ,MAAM,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,sBAC3B,6LAAC;0CAAe;+BAAR;;;;;;;;;;;;;;;;0BAOhB,6LAAC;;kCACC,6LAAC;wBAAM,SAAQ;wBAAe,WAAU;kCAA+C;;;;;;kCAGvF,6LAAC;wBACC,MAAK;wBACL,IAAG;wBACH,MAAK;wBACL,WAAU;wBACV,aAAY;wBACZ,QAAQ;;;;;;oBAET,MAAM,MAAM,EAAE,8BACb,6LAAC;wBAAI,WAAU;kCACZ,MAAM,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,sBAC9B,6LAAC;0CAAe;+BAAR;;;;;;;;;;;;;;;;0BAOhB,6LAAC;;kCACC,6LAAC;wBAAM,SAAQ;wBAAc,WAAU;kCAA+C;;;;;;kCAGtF,6LAAC;wBACC,MAAK;wBACL,IAAG;wBACH,MAAK;wBACL,WAAU;wBACV,aAAY;wBACZ,KAAI;wBACJ,MAAK;wBACL,QAAQ;;;;;;oBAET,MAAM,MAAM,EAAE,6BACb,6LAAC;wBAAI,WAAU;kCACZ,MAAM,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,sBAC7B,6LAAC;0CAAe;+BAAR;;;;;;;;;;;;;;;;YAOf,MAAM,OAAO,kBACZ,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAE,WAAU;8BAAwB,MAAM,OAAO;;;;;;;;;;;0BAKtD,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,8HAAA,CAAA,SAAM;wBAAC,MAAK;wBAAS,SAAQ;wBAAU,SAAS,IAAM,OAAO,OAAO,CAAC,IAAI;kCAAI;;;;;;kCAG9E,6LAAC,8HAAA,CAAA,SAAM;wBAAC,MAAK;kCAAS;;;;;;;;;;;;;;;;;;AAM9B;GApGwB;;QAEM,6JAAA,CAAA,iBAAc;;;KAFpB;AAuGjB,SAAS,cAAc,QAAkB;IAC9C,MAAM,OAA+B,CAAC;IACtC,KAAK,MAAM,CAAC,KAAK,MAAM,IAAI,SAAS,OAAO,GAAI;QAC7C,IAAI,CAAC,IAAI,GAAG;IACd;IACA,QAAQ,GAAG,CAAC,sBAAsB;IAClC,OAAO;AACT","debugId":null}},
    {"offset": {"line": 304, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/node_modules/next/src/build/webpack/loaders/next-flight-loader/action-client-wrapper.ts"],"sourcesContent":["// This file must be bundled in the app's client layer, it shouldn't be directly\n// imported by the server.\n\nexport { callServer } from 'next/dist/client/app-call-server'\nexport { findSourceMapURL } from 'next/dist/client/app-find-source-map-url'\n\n// A noop wrapper to let the Flight client create the server reference.\n// See also: https://github.com/facebook/react/pull/26632\n// Since we're using the Edge build of Flight client for SSR [1], here we need to\n// also use the same Edge build to create the reference. For the client bundle,\n// we use the default and let Webpack to resolve it to the correct version.\n// 1: https://github.com/vercel/next.js/blob/16eb80b0b0be13f04a6407943664b5efd8f3d7d0/packages/next/src/server/app-render/use-flight-response.tsx#L24-L26\nexport const createServerReference = (\n  (!!process.env.NEXT_RUNTIME\n    ? // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client.edge')\n    : // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client')) as typeof import('react-server-dom-webpack/client')\n).createServerReference\n"],"names":["callServer","createServerReference","findSourceMapURL","process","env","NEXT_RUNTIME","require"],"mappings":"AAAA,gFAAgF;AAChF,0BAA0B;AAYrBG,QAAQC,GAAG,CAACC,YAAY,GAEvBC,QAAQ,0CAERA,QAAQ;;;;;;;;;;;;;;;;;IAdLN,UAAU,EAAA;eAAVA,eAAAA,UAAU;;IASNC,qBAAqB,EAAA;eAArBA;;IARJC,gBAAgB,EAAA;eAAhBA,qBAAAA,gBAAgB;;;+BADE;qCACM;AAQ1B,MAAMD,wBACV,CAAA,CAAC,+MAI2C,EAC7CA,qBAAqB","ignoreList":[0],"debugId":null}}]
}