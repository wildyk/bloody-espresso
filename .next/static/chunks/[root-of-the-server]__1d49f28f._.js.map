{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/src/app/lib/actions.ts"],"sourcesContent":["'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { redirect } from 'next/navigation';\nimport postgres from 'postgres';\nimport { z } from 'zod';\n\nconst sql = postgres(process.env.POSTGRES_URL!, { ssl: 'require' });\n\nconst MenuSchema = z.object({\n  id: z.string(),\n  nama_produk: z.string(),\n  harga_produk: z.number(),\n});\n\nconst TransaksiSchema = z.object({\n  id: z.string(),\n  id_produk: z.string(),\n  nama_pembeli: z.string(),\n  total_harga: z.number(),\n  tanggal_transaksi: z.string(),\n  quantity: z.number().optional(),\n});\n\nconst CreateMenu = MenuSchema.omit({ id: true });\nconst UpdateMenu = MenuSchema.omit({ id: true });\n\n// MENU FUNCTIONS\nexport async function createMenu(formData: FormData) {\n  const { nama_produk, harga_produk } = CreateMenu.parse({\n    nama_produk: formData.get('nama_produk'),\n    harga_produk: Number(formData.get('harga_produk')),\n  });\n\n  await sql`\n    INSERT INTO produk (nama_produk, harga_produk)\n    VALUES (${nama_produk}, ${harga_produk})\n  `;\n\n  revalidatePath('/admin/dashboard/menu');\n  redirect('/admin/dashboard/menu');\n}\n\nexport async function updateMenu(id: string, formData: FormData) {\n  const { nama_produk, harga_produk } = UpdateMenu.parse({\n    nama_produk: formData.get('nama_produk'),\n    harga_produk: Number(formData.get('harga_produk')),\n  });\n\n  await sql`\n    UPDATE produk\n    SET nama_produk = ${nama_produk}, harga_produk = ${harga_produk}\n    WHERE id_produk = ${id}\n  `;\n\n  revalidatePath('/admin/dashboard/menu');\n  redirect('/admin/dashboard/menu');\n}\n\nexport async function deleteMenu(id: string) {\n  await sql`DELETE FROM produk WHERE id_produk = ${id}`;\n  revalidatePath('/admin/dashboard/menu');\n}\n\nexport async function getProductById(id: number) {\n  try {\n    const result = await sql`\n      SELECT id_produk, nama_produk, harga_produk \n      FROM produk \n      WHERE id_produk = ${id}\n    `;\n\n    if (result.length === 0) {\n      return null;\n    }\n\n    return {\n      id_produk: result[0].id_produk,\n      nama_produk: result[0].nama_produk,\n      harga_produk: Number(result[0].harga_produk)\n    };\n  } catch (error) {\n    console.error('Database Error:', error);\n    throw new Error('Failed to fetch product data.');\n  }\n}\n\nexport async function createTransaksi(formData: FormData) {\n  const id_produk = formData.get('id_produk');\n  const nama_pembeli = formData.get('nama_pembeli');\n  const total_harga = Number(formData.get('total_harga'));\n  const quantity = Number(formData.get('quantity')) || 1;\n  const tanggal_transaksi = formData.get('tanggal_transaksi') || new Date().toISOString().split('T')[0];\n\n  const CreateTransaksiWithQuantity = z.object({\n    id_produk: z.string(),\n    nama_pembeli: z.string(),\n    total_harga: z.number(),\n    quantity: z.number().min(1),\n    tanggal_transaksi: z.string(),\n  });\n\n  const validatedData = CreateTransaksiWithQuantity.parse({\n    id_produk,\n    nama_pembeli,\n    total_harga,\n    quantity,\n    tanggal_transaksi,\n  });\n\n  try {\n    await sql`\n      INSERT INTO transaksi (id_produk, nama_pembeli, total_harga, tanggal_transaksi, quantity)\n      VALUES (${validatedData.id_produk}, ${validatedData.nama_pembeli}, ${validatedData.total_harga}, ${validatedData.tanggal_transaksi}, ${validatedData.quantity})\n    `;\n  } catch (error) {\n    console.error('Database Error:', error);\n    throw new Error('Failed to create transaksi.');\n  }\n\n  revalidatePath('/admin/dashboard/transaksi');\n  redirect('/admin/dashboard/transaksi');\n}\n\n"],"names":[],"mappings":";;;;;;IAuFsB,kBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/src/app/lib/data.ts"],"sourcesContent":["import postgres from 'postgres';\nimport {\n  CustomerField,\n  CustomersTableType,\n  InvoiceForm,\n  InvoicesTable,\n  LatestInvoiceRaw,\n  Revenue,\n} from './definitions';\nimport { formatCurrency } from './utils';\n\nconst sql = postgres(process.env.POSTGRES_URL!, { ssl: 'require' });\n\nexport async function fetchProduk(id: string) {\n  try {\n    const result = await sql<{\n      id_produk: number;\n      nama_produk: string;\n      harga_produk: number;\n    }[]>`\n      SELECT id_produk, nama_produk, harga_produk \n      FROM produk \n      WHERE id_produk = ${id}\n      LIMIT 1\n    `;\n\n    return result[0]; \n  } catch (error) {\n    console.error('Database Error:', error);\n    throw new Error('Failed to fetch produk by ID.');\n  }\n  \n}\nexport async function fetchAllProduk() {\n  try {\n    const result = await sql`\n      SELECT id_produk, nama_produk, harga_produk \n      FROM produk \n      ORDER BY id_produk ASC\n    `;\n    return result;\n  } catch (error) {\n    console.error('Database Error:', error);\n    throw new Error('Failed to fetch all produk.');\n  }\n}\n\nexport async function fetchTransaksi() {\n  await new Promise((r) => setTimeout(r, 1500));\n  try {\nconst transaksi = await sql<{\n  id_transaksi: number;\n  id_produk: number;\n  nama_pembeli: string;\n  tanggal_transaksi: string;\n  total_harga: number;\n  quantity: number;\n}[]>`\n  SELECT id_transaksi, id_produk, nama_pembeli, tanggal_transaksi, total_harga, quantity\n  FROM transaksi\n  ORDER BY tanggal_transaksi ASC\n`;\n    return transaksi;\n  } catch (error) {\n    console.error('Database Error:', error);\n    throw new Error('Failed to fetch transaksi.');\n  }\n}\n\nexport async function fetchAnalytics() {\n  await new Promise((resolve) => setTimeout(resolve, 1500)); \n  try {\n    // Query 1: total produk\n    const totalProdukRes = await sql`SELECT COUNT(*) FROM produk`;\n    const totalProduk = Number(totalProdukRes[0].count);\n\n    // Query 2: total revenue (jumlah total_harga dari transaksi)\n    const totalRevenueRes = await sql`SELECT SUM(total_harga) FROM transaksi`;\n    const totalRevenue = Number(totalRevenueRes[0].sum || 0);\n\n    // Query 3: produk paling sering muncul di transaksi\n    const mostSoldRes = await sql`\n      SELECT p.nama_produk, COUNT(t.id_produk) AS jumlah_terjual\n      FROM transaksi t\n      JOIN produk p ON t.id_produk = p.id_produk\n      GROUP BY p.nama_produk\n      ORDER BY jumlah_terjual DESC\n      LIMIT 1;\n    `;\n    const mostSold = mostSoldRes[0];\n\n    return {\n      totalProduk,\n      totalRevenue,\n      mostSold: mostSold?.nama_produk || '-',\n      jumlahTerjual: mostSold?.jumlah_terjual || 0,\n    };\n  } catch (err) {\n    console.error('DB Error (analytics):', err);\n    throw new Error('Failed to fetch analytics data.');\n  }\n}\n\nexport async function fetchPenjualanProduk() {\n  await new Promise((resolve) => setTimeout(resolve, 2000)); \n  try {\n    const data = await sql<{ nama_produk: string; jumlah_terjual: number }[]>`\n      SELECT p.nama_produk, COUNT(t.id_produk) AS jumlah_terjual\n      FROM transaksi t\n      JOIN produk p ON t.id_produk = p.id_produk\n      GROUP BY p.nama_produk\n      ORDER BY jumlah_terjual DESC\n    `;\n    return data;\n  } catch (err) {\n    console.error('DB Error (grafik):', err);\n    throw new Error('Gagal ambil data grafik penjualan.');\n  }\n}\n\nexport async function fetchProdukWithFoto() {\n  const produk = await sql<{\n    id_produk: number;\n    nama_produk: string;\n    harga_produk: number;\n    foto: string;\n  }[]>`SELECT * FROM menu ORDER BY id_produk ASC`;\n  return produk;\n}\n\n"],"names":[],"mappings":";;;;;;;;AAWqB;AAXrB;;AAWA,MAAM,MAAM,CAAA,GAAA,2IAAA,CAAA,UAAQ,AAAD,EAAE,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,YAAY,EAAG;IAAE,KAAK;AAAU;AAE1D,eAAe,YAAY,EAAU;IAC1C,IAAI;QACF,MAAM,SAAS,MAAM,GAIjB,CAAC;;;wBAGe,EAAE,GAAG;;IAEzB,CAAC;QAED,OAAO,MAAM,CAAC,EAAE;IAClB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mBAAmB;QACjC,MAAM,IAAI,MAAM;IAClB;AAEF;AACO,eAAe;IACpB,IAAI;QACF,MAAM,SAAS,MAAM,GAAG,CAAC;;;;IAIzB,CAAC;QACD,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mBAAmB;QACjC,MAAM,IAAI,MAAM;IAClB;AACF;AAEO,eAAe;IACpB,MAAM,IAAI,QAAQ,CAAC,IAAM,WAAW,GAAG;IACvC,IAAI;QACN,MAAM,YAAY,MAAM,GAOpB,CAAC;;;;AAIL,CAAC;QACG,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mBAAmB;QACjC,MAAM,IAAI,MAAM;IAClB;AACF;AAEO,eAAe;IACpB,MAAM,IAAI,QAAQ,CAAC,UAAY,WAAW,SAAS;IACnD,IAAI;QACF,wBAAwB;QACxB,MAAM,iBAAiB,MAAM,GAAG,CAAC,2BAA2B,CAAC;QAC7D,MAAM,cAAc,OAAO,cAAc,CAAC,EAAE,CAAC,KAAK;QAElD,6DAA6D;QAC7D,MAAM,kBAAkB,MAAM,GAAG,CAAC,sCAAsC,CAAC;QACzE,MAAM,eAAe,OAAO,eAAe,CAAC,EAAE,CAAC,GAAG,IAAI;QAEtD,oDAAoD;QACpD,MAAM,cAAc,MAAM,GAAG,CAAC;;;;;;;IAO9B,CAAC;QACD,MAAM,WAAW,WAAW,CAAC,EAAE;QAE/B,OAAO;YACL;YACA;YACA,UAAU,UAAU,eAAe;YACnC,eAAe,UAAU,kBAAkB;QAC7C;IACF,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,yBAAyB;QACvC,MAAM,IAAI,MAAM;IAClB;AACF;AAEO,eAAe;IACpB,MAAM,IAAI,QAAQ,CAAC,UAAY,WAAW,SAAS;IACnD,IAAI;QACF,MAAM,OAAO,MAAM,GAAsD,CAAC;;;;;;IAM1E,CAAC;QACD,OAAO;IACT,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,sBAAsB;QACpC,MAAM,IAAI,MAAM;IAClB;AACF;AAEO,eAAe;IACpB,MAAM,SAAS,MAAM,GAKjB,CAAC,yCAAyC,CAAC;IAC/C,OAAO;AACT","debugId":null}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/src/app/ui/button.tsx"],"sourcesContent":["import clsx from 'clsx';\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  children: React.ReactNode;\n}\n\nexport function Button({ children, className, ...rest }: ButtonProps) {\n  return (\n    <button\n      {...rest}\n      className={clsx(\n        'flex h-10 items-center rounded-lg bg-red-800 px-4 text-sm font-medium text-white transition-colors hover:bg-red-700  focus-visible:outline-offset-2 focus-visible:outline-red-800 active:bg-red-700 aria-disabled:cursor-not-allowed aria-disabled:opacity-50',\n        className,\n      )}\n    >\n      {children}\n    </button>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAMO,SAAS,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,MAAmB;IAClE,qBACE,6LAAC;QACE,GAAG,IAAI;QACR,WAAW,CAAA,GAAA,wIAAA,CAAA,UAAI,AAAD,EACZ,iQACA;kBAGD;;;;;;AAGP;KAZgB","debugId":null}},
    {"offset": {"line": 166, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/nosifer_d0ad537.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"nosifer_d0ad537-module__-kDrfG__className\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/nosifer_d0ad537.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22fonts.ts%22,%22import%22:%22Nosifer%22,%22arguments%22:[{%22subsets%22:[%22latin%22],%22weight%22:%22400%22}],%22variableName%22:%22nosifer%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Nosifer', 'Nosifer Fallback'\",\n        fontWeight: 400,\nfontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,yJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,YAAY;QACpB,WAAW;IAEP;AACJ;AAEA,IAAI,yJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,yJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/alegreya_4aac7abd.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"alegreya_4aac7abd-module__d8PRSW__className\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/alegreya_4aac7abd.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22fonts.ts%22,%22import%22:%22Alegreya%22,%22arguments%22:[{%22subsets%22:[%22latin%22],%22weight%22:[%22400%22,%22500%22,%22700%22]}],%22variableName%22:%22alegreya%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Alegreya', 'Alegreya Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,2JAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,2JAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,2JAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 227, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/frijole_e11d2e94.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"frijole_e11d2e94-module__Jf0JEa__className\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/frijole_e11d2e94.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22fonts.ts%22,%22import%22:%22Frijole%22,%22arguments%22:[{%22subsets%22:[%22latin%22],%22weight%22:%22400%22}],%22variableName%22:%22frijole%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Frijole', 'Frijole Fallback'\",\n        fontWeight: 400,\nfontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,0JAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,YAAY;QACpB,WAAW;IAEP;AACJ;AAEA,IAAI,0JAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,0JAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 259, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 299, "column": 0}, "map": {"version":3,"sources":["file:///root/CODING/tubes-siweb/src/app/ui/transaksi/createform.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport { UserIcon, CalendarIcon, CurrencyDollarIcon, ShoppingCartIcon, TagIcon, ChevronDownIcon } from '@heroicons/react/24/outline';\nimport { createTransaksi } from '@/app/lib/actions';\nimport { fetchAllProduk } from '@/app/lib/data';\nimport { Button } from '@/app/ui/button';\nimport { alegreya } from '@/app/ui/fonts';\n\ninterface Product {\n  id_produk: number;\n  nama_produk: string;\n  harga_produk: number;\n}\n\nexport default function TransactionForm() {\n  const [products, setProducts] = useState<Product[]>([]);\n  const [selectedProduct, setSelectedProduct] = useState<Product | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [quantity, setQuantity] = useState(1);\n  const [totalHarga, setTotalHarga] = useState(0);\n  const [error, setError] = useState('');\n\n  // Load semua produk saat component mount\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        setLoading(true);\n        const productData = await fetchAllProduk();\n        setProducts(productData ? Array.from(productData) : []);\n      } catch (error) {\n        console.error('Error fetching products:', error);\n        setError('Gagal mengambil data produk');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchProducts();\n  }, []);\n\n  // Function untuk handle perubahan produk yang dipilih\n  const handleProductChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const productId = parseInt(e.target.value);\n    \n    if (!productId) {\n      setSelectedProduct(null);\n      setTotalHarga(0);\n      return;\n    }\n\n    const product = products.find(p => p.id_produk === productId);\n    if (product) {\n      setSelectedProduct(product);\n      setTotalHarga(product.harga_produk * quantity);\n    }\n  };\n\n  // Update total harga ketika quantity berubah\n  useEffect(() => {\n    if (selectedProduct) {\n      setTotalHarga(selectedProduct.harga_produk * quantity);\n    }\n  }, [selectedProduct, quantity]);\n\n  const handleQuantityChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newQuantity = parseInt(e.target.value) || 1;\n    setQuantity(newQuantity);\n  };\n\n  return (\n    <form action={createTransaksi} className={alegreya.className}>\n      <div className=\"rounded-md bg-gray-50 p-4 md:p-6\">\n        {/* Pilih Produk */}\n        <div className=\"mb-4\">\n          <label htmlFor=\"id_produk\" className=\"mb-2 block text-xl font-medium\">\n            Pilih Produk\n          </label>\n          <div className=\"relative\">\n            <select\n              id=\"id_produk\"\n              name=\"id_produk\"\n              required\n              onChange={handleProductChange}\n              disabled={loading}\n              className=\"peer block w-full rounded-md border border-gray-200 py-2 pl-10 pr-10 text-base outline-2 placeholder:text-gray-500 appearance-none bg-white\"\n            >\n              <option value=\"\">\n                {loading ? 'Memuat produk...' : 'Pilih produk'}\n              </option>\n              {products.map((product) => (\n                <option key={product.id_produk} value={product.id_produk}>\n                  ID: {product.id_produk} - {product.nama_produk} (Rp {product.harga_produk.toLocaleString('id-ID')})\n                </option>\n              ))}\n            </select>\n            <ShoppingCartIcon className=\"pointer-events-none absolute left-3 top-1/2 h-[18px] w-[18px] -translate-y-1/2 text-gray-500\" />\n            <ChevronDownIcon className=\"pointer-events-none absolute right-3 top-1/2 h-[18px] w-[18px] -translate-y-1/2 text-gray-500\" />\n          </div>\n          {error && (\n            <p className=\"mt-1 text-sm text-red-600\">{error}</p>\n          )}\n        </div>\n\n        {/* Info Produk Terpilih (Read-only) */}\n        {selectedProduct && (\n          <div className=\"mb-4 rounded-md bg-blue-50 p-4 border border-blue-200\">\n            <h3 className=\"text-lg font-medium text-blue-900 mb-2\">Informasi Produk Terpilih</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-blue-700\">\n                  ID Produk\n                </label>\n                <div className=\"relative mt-1\">\n                  <input\n                    type=\"text\"\n                    value={selectedProduct.id_produk}\n                    readOnly\n                    className=\"block w-full rounded-md border border-blue-200 bg-blue-50 py-2 pl-10 text-base text-blue-900\"\n                  />\n                  <TagIcon className=\"pointer-events-none absolute left-3 top-1/2 h-[18px] w-[18px] -translate-y-1/2 text-blue-500\" />\n                </div>\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-blue-700\">\n                  Nama Produk\n                </label>\n                <div className=\"relative mt-1\">\n                  <input\n                    type=\"text\"\n                    value={selectedProduct.nama_produk}\n                    readOnly\n                    className=\"block w-full rounded-md border border-blue-200 bg-blue-50 py-2 pl-10 text-base text-blue-900\"\n                  />\n                  <TagIcon className=\"pointer-events-none absolute left-3 top-1/2 h-[18px] w-[18px] -translate-y-1/2 text-blue-500\" />\n                </div>\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-blue-700\">\n                  Harga Satuan\n                </label>\n                <div className=\"relative mt-1\">\n                  <input\n                    type=\"text\"\n                    value={`Rp ${selectedProduct.harga_produk.toLocaleString('id-ID')}`}\n                    readOnly\n                    className=\"block w-full rounded-md border border-blue-200 bg-blue-50 py-2 pl-10 text-base text-blue-900\"\n                  />\n                  <CurrencyDollarIcon className=\"pointer-events-none absolute left-3 top-1/2 h-[18px] w-[18px] -translate-y-1/2 text-blue-500\" />\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Quantity */}\n        {selectedProduct && (\n          <div className=\"mb-4\">\n            <label htmlFor=\"quantity\" className=\"mb-2 block text-xl font-medium\">\n              Jumlah\n            </label>\n            <div className=\"relative\">\n              <input\n                id=\"quantity\"\n                name=\"quantity\"\n                type=\"number\"\n                min=\"1\"\n                value={quantity}\n                onChange={handleQuantityChange}\n                required\n                className=\"peer block w-full rounded-md border border-gray-200 py-2 pl-10 text-base outline-2 placeholder:text-gray-500\"\n              />\n              <ShoppingCartIcon className=\"pointer-events-none absolute left-3 top-1/2 h-[18px] w-[18px] -translate-y-1/2 text-gray-500\" />\n            </div>\n          </div>\n        )}\n\n        {/* Nama Pembeli */}\n        <div className=\"mb-4\">\n          <label htmlFor=\"nama_pembeli\" className=\"mb-2 block text-xl font-medium\">\n            Nama Pembeli\n          </label>\n          <div className=\"relative\">\n            <input\n              id=\"nama_pembeli\"\n              name=\"nama_pembeli\"\n              type=\"text\"\n              required\n              placeholder=\"Masukkan nama pembeli\"\n              className=\"peer block w-full rounded-md border border-gray-200 py-2 pl-10 text-base outline-2 placeholder:text-gray-500\"\n            />\n            <UserIcon className=\"pointer-events-none absolute left-3 top-1/2 h-[18px] w-[18px] -translate-y-1/2 text-gray-500\" />\n          </div>\n        </div>\n\n        {/* Tanggal Transaksi */}\n        <div className=\"mb-4\">\n          <label htmlFor=\"tanggal_transaksi\" className=\"mb-2 block text-xl font-medium\">\n            Tanggal Transaksi\n          </label>\n          <div className=\"relative\">\n            <input\n              id=\"tanggal_transaksi\"\n              name=\"tanggal_transaksi\"\n              type=\"date\"\n              required\n              defaultValue={new Date().toISOString().split('T')[0]}\n              className=\"peer block w-full rounded-md border border-gray-200 py-2 pl-10 text-base outline-2 placeholder:text-gray-500\"\n            />\n            <CalendarIcon className=\"pointer-events-none absolute left-3 top-1/2 h-[18px] w-[18px] -translate-y-1/2 text-gray-500\" />\n          </div>\n        </div>\n\n        {/* Total Harga */}\n        <div className=\"mb-4\">\n          <label htmlFor=\"total_harga\" className=\"mb-2 block text-xl font-medium\">\n            Total Harga\n          </label>\n          <div className=\"relative\">\n            <input\n              id=\"total_harga\"\n              name=\"total_harga\"\n              type=\"number\"\n              value={totalHarga}\n              readOnly\n              className=\"peer block w-full rounded-md border border-gray-200 bg-gray-100 py-2 pl-10 text-base outline-2 placeholder:text-gray-500\"\n            />\n            <CurrencyDollarIcon className=\"pointer-events-none absolute left-3 top-1/2 h-[18px] w-[18px] -translate-y-1/2 text-gray-500\" />\n          </div>\n          {selectedProduct && (\n            <p className=\"mt-1 text-sm text-gray-600\">\n              {quantity} × Rp {selectedProduct.harga_produk.toLocaleString('id-ID')} = Rp {totalHarga.toLocaleString('id-ID')}\n            </p>\n          )}\n        </div>\n      </div>\n\n      {/* Tombol Aksi */}\n      <div className={`${alegreya.className} mt-6 flex justify-end gap-4`}>\n        <Link\n          href=\"/admin/dashboard/transaksi\"\n          className=\"flex h-10 items-center rounded-lg bg-gray-100 px-4 text-lg font-medium text-gray-600 transition-colors hover:bg-gray-200\"\n        >\n          Batal\n        </Link>\n        <Button type=\"submit\" disabled={!selectedProduct}>\n          Simpan Transaksi\n        </Button>\n      </div>\n    </form>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}